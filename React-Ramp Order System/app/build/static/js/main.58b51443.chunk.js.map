{"version":3,"sources":["components/react-components/Login/Header/index.js","components/react-components/Login/login_form.js","components/react-components/Login/register.js","components/react-components/Login/index.js","components/react-components/Navbar/index.js","components/react-components/Listings/index.js","components/react-components/Dashboard/Admin/admin_dash.js","components/react-components/Dashboard/client_dash.js","components/react-components/Dashboard/RampInfoPage/ramp-icons/left-height.svg","components/react-components/Dashboard/RampInfoPage/ramp-icons/right-height.svg","components/react-components/Dashboard/RampInfoPage/RampDimensions.js","components/react-components/Dashboard/ProgressBar.js","components/react-components/Dashboard/RampInfoPage/StatusBlock.js","components/react-components/Dashboard/RampInfoPage/Notes.js","components/react-components/Dashboard/RampInfoPage/GeneralInfo.js","components/react-components/Dashboard/RampInfoPage/PhotoGallery.js","components/react-components/Dashboard/RampInfoPage/index.js","components/react-components/Dashboard/index.js","components/react-components/RequestForm/FormUserDetails.js","components/react-components/RequestForm/Upload/Upload.js","components/react-components/RequestForm/ImageUpload.js","components/react-components/RequestForm/LiabilityWaiver.js","components/react-components/RequestForm/index.js","components/App.js","serviceWorker.js"],"names":["Header","className","style","display","margin","maxWidth","src","React","Component","LoginForm","props","validateAndSubmit","e","preventDefault","form","current","reportValidity","login","state","username","password","isAdmin","createRef","ref","this","onSubmit","TextField","value","onChange","setState","target","variant","required","fullWidth","id","label","name","type","pwd","autoComplete","invalidLogin","Alert","severity","loginMsg","Button","Grid","container","item","xs","onClick","goBack","register","RegisterForm","pwdConfirm","console","log","email","firstName","lastName","passwordsMatch","autoFocus","helperText","error","AccountTypeSelector","clickHandler","size","marginLeft","marginRight","marginTop","Login","inLoginForm","inRegisterForm","loggedIn","to","logout","Nav","title","width","height","color","stackSize","Listing","listing","click","spacing","FilterBox","handleChange","listingFilter","defaultValue","ListingBox","filterListings","toLowerCase","filteredListings","orders","filter","includes","Loaded","isLoaded","message","align","map","i","key","Skeleton","NumberStat","stat","AdminDashboard","verifyTokens","then","valid","fetch","method","headers","localStorage","getItem","res","ok","json","Error","status","result","gotoFuncs","total","length","build_num","paint_num","delivery_num","complete_num","phase","justify","data","ramp_info","ClientDashboard","userisLoaded","users","handleUser","user","find","x","results","textAlign","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref3","xlinkHref","opacity","fillOpacity","stroke","strokeWidth","strokeOpacity","fill","_ref","svgRef","preserveAspectRatio","viewBox","ForwardRef","forwardRef","RampDimensions","icon","listings","entries","ProgressBar","progress","StatusBlock","statuses","date","statusState","statusInput","dirtyBit","statusMsg","Select","handleStatusInput","MenuItem","NoteBlock","note","author","backgroundColor","bg","text","Notes","notes","saveNote","JSON","parse","newNote","hash","charCodeAt","c","toString","toUpperCase","luminence","parseInt","slice","substring","noteState","md","handleNewNoteInput","InputLabelProps","shrink","disabled","generateNoteColor","GeneralInfo","options","clientEditable","adminEditable","infoState","editable","InputLabel","labelId","InputProps","readOnly","opt","PhotoGallery","galleryState","leftSrc","entrySrc","rightSrc","overflow","alt","RampInfoPage","overallDirtyBit","some","saveChanges","newOrder","serializedNotes","stringify","body","noteStateCopy","statusStateCopy","infoStateCopy","catch","err","now","Date","getMonth","getDate","getFullYear","push","oldStatus","Dashboard","pushToStack","component","newStack","pageStack","pop","Navbar","FormUserDetails","continue","nextStep","back","prevStep","Fragment","AppBar","position","background","Typography","marginBottom","Checkbox","handleCheck","right","Upload","pictures","onDrop","bind","picture","concat","file","FormData","append","process","request","Request","response","handlePicture","imageIdentifier","url","border","withIcon","withPreview","buttonText","imgExtension","maxFileSize","fileSizeError","flexDirection","rootElement","document","getElementById","ReactDOM","render","ImageUpload","Uploaded","show","values","inputProps","min","max","step","left","LiabilityWaiver","textDecoration","Box","float","FormControlLabel","control","UserForm","input","rightStepHeight","leftStepHeight","entrywayPhoto","stepLeftPhoto","stepRightPhoto","subsidize","handleSubmitWaiver","handleSubmitOrder","companyName","phoneNumber","deliveryAddress","billingAddress","waiver","rampColor","deliveryType","requestOptions","a","Promise","reject","errorMessage","managerFirst","witnessSig","witnessName","token","pk","managerSig","App","refresh","refreshToken","setItem","access","isCurrentlyCheckingStorageForLogin","removeItem","first_name","last_name","quickRefresh","resolve","accessToken","validToken","path","exact","LinearProgress","Boolean","window","location","hostname","match"],"mappings":"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","file":"static/js/main.58b51443.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\n/* Component for the Home page */\r\nclass Header extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"header\">\r\n            <img style={{ display: 'block', margin: 'auto', maxWidth:'30%' } } src={\"/static/logo.png\"}></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n/**\r\n * Form for filling in login credentials.\r\n * \r\n * @prop {function} login - use to login user. Takes new user object\r\n * @prop {function} goBack - use to return to parent login page.\r\n * @prop {boolean}  isAdmin - true iff the login form is for an admin\r\n */\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    }\r\n    this.form = React.createRef();\r\n  }\r\n\r\n  validateAndSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.form.current.reportValidity()){\r\n      this.props.login(this.state.username, this.state.password, this.props.isAdmin)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"buttons center\">\r\n        <form ref={this.form} onSubmit={this.validateAndSubmit}>\r\n          <TextField\r\n            value={this.state.username}\r\n            onChange = { e => this.setState({\r\n              username: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n          />\r\n  \r\n          <TextField\r\n            value = {this.state.pwd}\r\n            onChange = { e => this.setState({\r\n              password: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n  \r\n          {this.props.invalidLogin && (<Alert severity=\"error\">{this.props.loginMsg}</Alert>) }\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n          >\r\n              Sign in\r\n          </Button>\r\n\r\n  \r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Button className=\"center_link\" onClick={this.props.goBack} >\r\n                Back to home page\r\n              </Button>\r\n            </Grid>\r\n            { // We only allow clients to create new accounts. Stopgap accounts are made manually.\r\n            !this.props.isAdmin && \r\n            <Grid item xs>\r\n              <Button className=\"center_link\" onClick={this.props.register}>\r\n                Don't have an account?<br/>Sign Up!\r\n              </Button>\r\n            </Grid>}\r\n            \r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;                                                                                                                                           ","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass RegisterForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      firstName:\"\", \r\n      lastName: \"\",\r\n      email: \"\",\r\n      pwd: \"\",\r\n      pwdConfirm: \"\",\r\n      passwordsMatch: true,\r\n      isAdmin: false\r\n    }\r\n    this.form = React.createRef();\r\n  }\r\n\r\n  validateAndSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Form incomplete\r\n    if(!this.form.current.reportValidity())\r\n      return;\r\n    // Passwords do not match\r\n    if (this.state.pwd != this.state.pwdConfirm){\r\n      this.setState({passwordsMatch: false});\r\n      return;\r\n    }\r\n    console.log(this.state)\r\n    // No issues; sign user up\r\n    this.props.register(\r\n      this.state.email,\r\n      this.state.pwd,\r\n      this.state.firstName,\r\n      this.state.lastName,\r\n      this.state.isAdmin\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buttons center\">\r\n        <form ref={this.form} onSubmit={this.validateAndSubmit}>\r\n        <TextField\r\n            value={this.state.firstName}\r\n            onChange = { e => this.setState({\r\n              firstName: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"name\"\r\n            autoComplete=\"firstName\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            value={this.state.lastName}\r\n            onChange = { e => this.setState({\r\n              lastName: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"lastName\"\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            type=\"name\"\r\n            autoComplete=\"lastName\"\r\n            autoFocus\r\n          />\r\n  \r\n          <TextField\r\n            value = {this.state.email}\r\n            onChange = { e => this.setState({\r\n              email: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            type=\"email\"\r\n            autoFocus\r\n          />\r\n  \r\n          <TextField\r\n            value = {this.state.pwd}\r\n            onChange = { e => this.setState({\r\n              pwd: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n  \r\n  \r\n          <TextField\r\n            value = {this.state.pwdConfirm}\r\n            onChange = { e => this.setState({\r\n              pwdConfirm: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"repeatpassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"repeatpassword\"\r\n            autoComplete=\"current-password\"\r\n            helperText={this.state.passwordsMatch ? \"\" : \"Does not match password\"}\r\n            error={!this.state.passwordsMatch}\r\n          />\r\n  \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\" >\r\n            Submit\r\n          </Button>\r\n  \r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Button fullWidth onClick={this.props.goBack}>\r\n                Go Back\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n        </form>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;  ","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport \"./style.css\";\r\nimport Header from \"./Header\";\r\nimport LoginForm from \"./login_form\";\r\nimport RegisterForm from \"./register\";\r\n\r\n\r\n/* Component for the Login page */\r\nclass Login extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      inLoginForm: false,\r\n      inRegisterForm: false,\r\n      isAdmin: false\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (this.props.loggedIn) // user already logged in. they must actually log OUT to stay logged in.\r\n      return <Redirect to=\"/dashboard\" />\r\n    \r\n    return (\r\n      <div className=\"login__bg-image center\">\r\n        <Header />\r\n        {!this.state.inLoginForm ? \r\n          <AccountTypeSelector clickHandler={ (isAdmin) =>  this.setState({inLoginForm: true, isAdmin: isAdmin}) }/> : \r\n          (\r\n            this.state.inRegisterForm ? \r\n              <RegisterForm register={this.props.register} goBack = {() => this.setState({ inRegisterForm: false })}/> :\r\n              <LoginForm \r\n                username = {this.props.username}\r\n                login={this.props.login} \r\n                register={() => this.setState({inRegisterForm: true })} \r\n                isAdmin={this.state.isAdmin} \r\n                goBack = {() => {\r\n                  this.setState({ inLoginForm: false });\r\n                  this.props.logout();\r\n                }}\r\n                invalidLogin={this.state.inLoginForm && this.props.invalidLogin} \r\n                loginMsg={this.state.inLoginForm ? this.props.loginMsg : \"\"} \r\n              />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* Component to select a different kind of account */\r\nfunction AccountTypeSelector(props) {\r\n  return (\r\n    <div className=\"buttons center\">\r\n        <Button\r\n           className=\"block newRequestButton login__button\"\r\n          onClick={() => props.clickHandler(false)}\r\n           variant=\"contained\" size='large'\r\n          style={{ display: 'block', marginLeft: 'auto', marginRight: 'auto', marginTop: '10%' }}>\r\n          Create New Ramp Request\r\n          <br/>\r\n          Or\r\n          <br/>\r\n          Check Status of Existing Ramp Request\r\n        </Button>\r\n        <Button className=\"block login__button\" onClick={() => props.clickHandler(true) }>\r\n          Admin\r\n          <br/>\r\n          (StopGap Staff Only)\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\nclass Nav extends React.Component {\r\n    /*Will need to use states to change the title of the navbar*/\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <Grid container>\r\n                    <Grid item xs={3}>\r\n                        <span className=\"navTitle\"><h3><b>{this.props.title}</b></h3></span>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <span><img className='center' style={{ display: 'block', margin: 'auto', width: 300, height: 100 }} src={\"/static/logo.png\"}></img></span>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Button style={{margin: '10px 5px'}} color=\"secondary\" variant=\"contained\" onClick={this.props.logout}>Log Out</Button>\r\n                        {this.props.stackSize > 0 && \r\n                            <Button style={{margin: '10px 5px'}}  variant=\"contained\" onClick={this.props.goBack}>Go Back</Button>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {Skeleton} from '@material-ui/lab';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./styles.css\"\r\n\r\n//Listing returns a button with the client/business names and status\r\nclass Listing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n    const {listing, click} = this.props;\r\n    const all_status = [\r\n      \"Request Recieved\",\r\n      \"Request Accepted\",\r\n      \"Build Phase\",\r\n      \"Paint Phase\",\r\n      \"Out for Delivery\",\r\n      \"Completed\"\r\n    ];\r\n    \r\n    return (\r\n      <Button className=\"listing_button\" onClick={click}>\r\n        <Grid container spacing={4}>\r\n        <Grid item xs>{listing[\"pk\"]} </Grid>\r\n          <Grid item xs>{`${listing['first_name']} ${listing['last_name']}`}</Grid>\r\n          <Grid item xs>{listing['company']} </Grid>\r\n          <Grid item xs>{all_status[listing['status']]} </Grid>\r\n        </Grid>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nclass FilterBox extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listingFilter: \"\",\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      listingFilter: e.target.value\r\n    })\r\n    this.props.onChange(e.target.value)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <TextField \r\n        id=\"filled-basic\" \r\n        label=\"Filter Client by Full Name\" \r\n        variant=\"filled\"\r\n        defaultValue=\"\"\r\n        onChange={this.handleChange}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nclass ListingBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(props);\r\n    this.state = {\r\n      filteredListings: [],\r\n      error: null,\r\n      Loaded:false\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    // console.log(this.props.orders);\r\n    this.setState({\r\n      filteredListings: this.props.orders\r\n    })\r\n  }\r\n\r\n  filterListings = (listingFilter) => {\r\n\r\n    listingFilter = listingFilter.toLowerCase();\r\n    let filteredListings = this.props.orders;\r\n    filteredListings = filteredListings.filter((listing) =>{\r\n      let client_name = `${listing['first_name']} ${listing['last_name']}`.toLowerCase();\r\n      // console.log(`    ${client_name}`);\r\n      return client_name.includes(listingFilter)\r\n    });\r\n    this.setState ({\r\n      filteredListings\r\n    });\r\n  }\r\n\r\n  \r\n  \r\n\r\n  \r\n\r\n  render () {\r\n    const { filteredListings, error,Loaded } = this.state;\r\n    const click= this.props.click;\r\n    const isLoaded = this.props.isLoaded\r\n    if (error) {\r\n      return <div className=\"block\"> Error: {error.message}</div>\r\n    }\r\n    else if (!isLoaded) {\r\n      return <Skeleton className=\"block\" variant=\"rect\" height={220}/>\r\n    }\r\n\r\n \r\n   \r\n\r\n    if (isLoaded && !Loaded)\r\n    this.setState({\r\n      filteredListings: this.props.orders,\r\n      Loaded:true\r\n    })\r\n\r\n\r\n    \r\n  \r\n\r\n  \r\n\r\n    return (\r\n      <div className=\"listing_box block\">\r\n        <h2 className=\"block-title\">\r\n          Ramp Requests\r\n                  </h2>\r\n        {this.props.isAdmin &&\r\n        <FilterBox onChange={this.filterListings}></FilterBox>}\r\n        <Grid container spacing={4}>\r\n          <Grid align=\"center\" item xs>       \r\n            Order Number\r\n          </Grid>\r\n          <Grid align=\"center\" item xs>        \r\n            Full Name\r\n          </Grid>\r\n          <Grid align=\"center\" item xs>        \r\n            Company \r\n          </Grid>\r\n          <Grid align=\"center\" item xs>        \r\n            Status\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {filteredListings.map((listing,i) => (\r\n          <Listing\r\n            listing={listing}\r\n            key={i}\r\n            click={e => {\r\n\r\n              e.preventDefault();\r\n              click(listing);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListingBox;","import React from \"react\";\r\nimport \"./admin_styles.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListingBox from \"../../Listings\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass AdminDashboard extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      orders: []\r\n    }\r\n  }\r\n  \r\n\r\n  componentWillMount() {\r\n    console.log('wow')\r\n    console.log(typeof this.props.verifyTokens())\r\n    this.props.verifyTokens().then(valid => {\r\n      console.log(valid);\r\n      if (!valid)\r\n        return;\r\n      fetch(\"/order-information/\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json()\r\n        throw new Error(`Something went wrong with error code ${res.status}`)\r\n      })\r\n      .then(\r\n        (result) => {\r\n          const orders = result[\"results\"];\r\n  \r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: orders\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n    });\r\n  }\r\n  \r\n\r\n  render () {\r\n\r\n    const {gotoFuncs} = this.props;\r\n    const {orders, isLoaded} = this.state;\r\n\r\n    const total = orders.length;\r\n    var build_num = 0\r\n    var paint_num = 0\r\n    var delivery_num = 0\r\n    var complete_num = 0\r\n    if (isLoaded){\r\n      for (var i = 0; i < total; i++) { // More efficient than built-in filter functions\r\n        const phase = orders[i][\"status\"]\r\n        if (phase == 2){ // TODO: this works, but could be cleaner . . .\r\n          build_num ++;\r\n        }\r\n        if (phase == 3){\r\n          paint_num ++;\r\n        }\r\n        if (phase == 4){\r\n          delivery_num ++;\r\n        }\r\n        if (phase ==  5){\r\n          complete_num ++;\r\n        }\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify={\"center\"}>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Total Requests\" stat={total} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Ready For Build\" stat={build_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Ready For Paint\" stat={paint_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Out for Delivery\" stat={delivery_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Completed Ramps\" stat={complete_num} />\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          isLoaded && <ListingBox click={(data) => gotoFuncs.ramp_info(true,data, this.props.verifyTokens)} orders={orders} isAdmin = { this.props.isAdmin} isLoaded={isLoaded}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction NumberStat(props){\r\n  return (\r\n    <div className={\"number-stat block\"}>\r\n    <h2 className={\"block-title\"}>{props.title}</h2>\r\n      <span className={\"number-stat-num\"}>\r\n        {props.stat}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"react-router-dom/Link\";\r\nimport ListingBox from \"../Listings\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass ClientDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      userisLoaded: false,\r\n      orders: [],\r\n      users:[],\r\n      username: localStorage.getItem(\"username\") || \"\"\r\n    }\r\n  }\r\n\r\n\r\n  componentWillMount()  {\r\n    // if(!this.state.isLoaded){\r\n    this.props.verifyTokens().then(valid => {\r\n      if (!valid)\r\n        return;\r\n      fetch(\"/users\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json()\r\n        throw new Error(`Something went wrong with error code ${res.status}`)\r\n      })\r\n      .then(\r\n        (result) => {\r\n          const users = result[\"results\"];\r\n          // users.map(x => {\r\n          //   if (x[\"username\"] == this.props.username){\r\n          //       id = x[\"pk\"]\r\n  \r\n                \r\n          //   }\r\n          // })\r\n          this.handleUser(users)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n      // }\r\n  \r\n      if (this.state.isLoaded && !this.state.userisLoaded){\r\n        this.handleUser()\r\n      } // TODO: we moved this here so calls are not being NON STOP made to the backend\r\n    });\r\n  }\r\n\r\n  handleUser(users) {\r\n    this.props.verifyTokens().then(valid => {\r\n      if (!valid)\r\n        return;\r\n      fetch(\"/order-information/\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json()\r\n        throw new Error(`Something went wrong with error code ${res.status}`)\r\n      })\r\n      .then(\r\n        (result) => {\r\n          const orders = result[\"results\"];\r\n          \r\n          const user = users.find(x => x[\"username\"] == this.state.username)\r\n    \r\n          if (user){\r\n          \r\n            const results = orders.filter(x => x[\"user\"] == user[\"pk\"])\r\n            \r\n            this.setState({\r\n              isLoaded: true,\r\n              userisLoaded:true,\r\n              orders: results\r\n            });\r\n          } else {\r\n            // user wasn't found - return an error\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: \"User not found.\"\r\n            });\r\n          }\r\n          \r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            userisLoaded:true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    })\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    const gotoFuncs = this.props.gotoFuncs;\r\n    const orders= this.state.orders;\r\n    const isLoaded = this.state.userisLoaded;\r\n    return (\r\n      <div>\r\n        <h1 style={{ textAlign: 'center' }}>\r\n          Welcome to StopGap!\r\n        </h1>\r\n        <Link to='/form'>\r\n          <Button\r\n            className=\"newRequestButton\"\r\n            color=\"primary\" variant=\"contained\" size='large'\r\n            style={{ display: 'block', marginLeft: 'auto', marginRight: 'auto', marginTop: '10%' }}>\r\n            Create New Ramp Request\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <ListingBox click={(data) => gotoFuncs.ramp_info(false,data, this.props.verifyTokens)} orders={orders} isAdmin = { this.props.isAdmin} isLoaded={isLoaded}/>\r\n        {/* <ListingBox click={(id) => this.props.gotoFuncs.ramp_info(false,id)} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientDashboard;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.91 97.63L121.09 97.63L42.62 26.37L2.91 26.37L2.91 97.63Z\",\n  id: \"b3qLKDWjhK\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M81.85 97.63L2.91 26.37\",\n  id: \"c6oEPMuhN\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.57 100L5.34 100L5.34 24L0.57 24L0.57 100Z\",\n  id: \"aykloXu8q\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#b3qLKDWjhK\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeOpacity: 1\n}))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#c6oEPMuhN\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeOpacity: 1\n})))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#aykloXu8q\",\n  opacity: 1,\n  fill: \"#ff0000\",\n  fillOpacity: 1\n}))));\n\nvar SvgLeftHeight = function SvgLeftHeight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 128 128\",\n    width: 128,\n    height: 128,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLeftHeight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/left-height.e99db800.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M125.66 97.63L7.49 97.63L85.96 26.37L125.66 26.37L125.66 97.63Z\",\n  id: \"e6z75ZCptw\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M46.72 97.63L125.66 26.37\",\n  id: \"a16gI0sTqL\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M128 100L123.23 100L123.23 24L128 24L128 100Z\",\n  id: \"e4ZtRDWpx\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#e6z75ZCptw\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeOpacity: 1\n}))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a16gI0sTqL\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeOpacity: 1\n})))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#e4ZtRDWpx\",\n  opacity: 1,\n  fill: \"#ff0000\",\n  fillOpacity: 1\n}))));\n\nvar SvgRightHeight = function SvgRightHeight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 128 128\",\n    width: 128,\n    height: 128,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgRightHeight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/right-height.93642df0.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid'\r\n// import {ReactComponent as IconLeftGrade} from \"./ramp-icons/left_grade.svg\";\r\n// import {ReactComponent as IconRightGrade} from \"./ramp-icons/right_grade.svg\";\r\nimport {ReactComponent as IconLeftHeight} from \"./ramp-icons/left-height.svg\";\r\nimport {ReactComponent as IconRightHeight} from \"./ramp-icons/right-height.svg\";\r\n// import {ReactComponent as IconLength} from \"./ramp-icons/length.svg\";\r\n// import {ReactComponent as IconWidth} from \"./ramp-icons/width.svg\";\r\n\r\n/** Component that will display dimensions for the ramp.\r\n *  Uses a 2D image for now, could potentially be updated to show a 3D model.\r\n * \r\n//  *  @prop {object} ramp - Data on the ramp. Properties given are l_height, r_height, and color. The remaining properties are calculated. Width measurements are numbers measured in inches.\r\n **/\r\nclass RampDimensions extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n       data : {\r\n       \r\n        // \"Length\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLength style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Width\": {\r\n        //   value: \"\",\r\n        //   icon: < IconWidth style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Left Height\": {\r\n          value: \"\",\r\n          icon: < IconLeftHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        \"Right Height\": {\r\n          value: \"\",\r\n          icon: < IconRightHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        // \"Left Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLeftGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Right Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconRightGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Color\": {\r\n          value: \"\",\r\n          icon: null\r\n        },\r\n      },\r\n      error: null,\r\n      isLoaded: false,\r\n\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data : {\r\n        \r\n        // \"Length\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLength style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Width\": {\r\n        //   value: \"\",\r\n        //   icon: < IconWidth style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Left Height\": {\r\n          value: this.props.data[\"step_left_height\"],\r\n          icon: < IconLeftHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        \"Right Height\": {\r\n          value: this.props.data[\"step_right_height\"],\r\n          icon: < IconRightHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        // \"Left Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLeftGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Right Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconRightGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Color\": {\r\n          value: this.props.data[\"ramp_colour\"],\r\n          icon: null\r\n        },\r\n      },\r\n      isLoaded: true,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { listings, error, isLoaded } = this.state;\r\n    if (error) {\r\n      return <div> Error: {error.message}</div>\r\n    }\r\n    else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    }\r\n    else {\r\n    // const { ramp } = this.props;\r\n\r\n    // const l_height = ramp.l_height;\r\n    // const r_height = ramp.r_height;\r\n    // const color = ramp.color;\r\n    // const len = Math.max(l_height, r_height) * 6;\r\n    // const width = 34;\r\n    // const r_grade = (Math.atan(r_height / len) * (180 / Math.PI)).toFixed(2);\r\n    // const l_grade = (Math.atan(l_height / len) * (180 / Math.PI)).toFixed(2);\r\n\r\n \r\n\r\n    return ( \r\n      <div className={\"block\"}>\r\n        {/* This div is seperate from the grid container because this needs the \"block\" class. If the class is on Grid, layout issues appear. */ }\r\n        <Grid container className={\"ramp-dimensions\"} >\r\n          <Grid item xs={12}>\r\n            <h2 className=\"block-title\">\r\n              Ramp Dimensions\r\n            </h2>\r\n          </Grid>\r\n\r\n          {/* Diagram not needed unless it matches ramp size. */}\r\n          {/* <Grid item xs={12}>\r\n            <RampImage className={\"ramp-dimensions-image center-block\"} />\r\n          </Grid> */}\r\n          {\r\n            Object.entries(this.state.data).map((x, i) => {\r\n              const key = x[0];\r\n              const {value, icon} = x[1];\r\n\r\n              return (\r\n                <Grid container className={\"kv\"} key={i}>\r\n                  <Grid item xs={1} className={\"kv-key\"}>\r\n                    {icon && icon}\r\n                  </Grid>\r\n                  <Grid item xs={5} className={\"kv-key\"}>\r\n                    <strong >\r\n                      {key}\r\n                    </strong>\r\n                  </Grid>\r\n                  <Grid item xs={6} className={\"kv-value\"}>\r\n                    <span>\r\n                      {value}\r\n                    </span>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })\r\n          }\r\n        </Grid>   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default RampDimensions;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Progress bar that can be set to any percent.\r\n * \r\n * @prop {float} progress - a float from 0 to 1 determining the progress of the \r\n */\r\nfunction ProgressBar(props){\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress-bar-inner\" style={{width: `${props.progress * 100}%`}}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React from \"react\";\r\nimport ProgressBar from \"../ProgressBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Select, MenuItem, InputLabel} from \"@material-ui/core\";\r\nimport { sizing } from '@material-ui/system';\r\n\r\nclass StatusBlock extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.statuses = [\r\n      \"Request Recieved\",\r\n      \"Request Accepted\",\r\n      \"Build Phase\",\r\n      \"Paint Phase\",\r\n      \"Out for Delivery\",\r\n      \"Completed\"\r\n    ];\r\n    this.statuses[-1] = \"--\"\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      date:\"\",\r\n      // progress: (0 / (this.statuses.length - 1)) * 100,\r\n    };\r\n  }  \r\n\r\n\r\n  componentDidMount() {\r\n    // let new_progress = \"status\" in this.props.data ? this.statuses.indexOf(this.props.data[\"status\"]) : -1\r\n    // if (new_progress >= this.statuses.length || new_progress < -1){\r\n    //   new_progress = -1;\r\n    // }\r\n    // this.setState({\r\n    //   // status: this.state.data[\"status\"],\r\n    //   date: this.state.data[\"date_created\"],\r\n    //   isLoaded: true,\r\n    //   status: new_progress,\r\n    //   statusInput: new_progress\r\n    // });\r\n  }\r\n\r\n  // handle(){\r\n  //   const data = this.state.data\r\n    \r\n\t// \tconst token = localStorage.getItem('token-access')\r\n  //   const requestOptions = {\r\n  //         method: 'POST',\r\n  //         headers: {\r\n\t// \t\t\t      'Content-Type': 'application/json',\r\n\t// \t\t\t      'Authorization': 'Bearer ' + token\r\n\t// \t      },\r\n  //         body: JSON.stringify(data)\r\n  //   };\r\n  //   const link =  '/order-information/' \r\n  //   fetch(link, requestOptions)\r\n  //         .then(async response => {\r\n  //         const data = await response.json();\r\n    \r\n  //         // check for error response\r\n  //         if (!response.ok) {\r\n  //             // get error message from body or default to response status\r\n  //             const error = (data && data.message) || response.status;\r\n  //             return Promise.reject(error);\r\n  //         }\r\n\t// \t\t\t    //  console.log(data.pk)\r\n  //           // this.setState({ postId: data.pk })\r\n  //   })\r\n  //   .catch(error => {\r\n  //       this.setState({ errorMessage: error });\r\n  //       console.error('There was an error!', error);\r\n  //   }); \r\n\r\n  // }\r\n\r\n  // saveData = e => {\r\n  //   e.preventDefault();\r\n  //   // TODO: make post request\r\n  //   const new_status = this.state.statusInput;\r\n  //   var data = this.state.data\r\n  //   data[\"status\"] = this.statuses[new_status]\r\n  //   this.setState({\r\n  //     status:new_status,\r\n  //     data:data\r\n  //   })\r\n  //   this.handle()\r\n  // }\r\n\r\n  render() {\r\n    // const { status, statusInput, date, error, isLoaded } = this.state;\r\n    const {statusInput, dirtyBit} = this.props.statusState;\r\n    const statusMsg = this.statuses[statusInput];\r\n    const progress = (statusInput / (this.statuses.length - 1));\r\n    // if (error) {\r\n    //   return <div> Error: {error.message}</div>\r\n    // }\r\n    // else if (!isLoaded) {\r\n    //   return <div>Loading...</div>\r\n    // }\r\n    // else{\r\n\r\n    return (\r\n      <div className={`block ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          Status\r\n        </h2>\r\n        <span className={\"status-block-last-updated\"}>\r\n          Initial Request Date: <strong>\r\n            {this.props.date}\r\n          </strong>\r\n        </span>\r\n        <ProgressBar progress={progress} />\r\n        <span className={\"status-block-status\"} > \r\n          {statusMsg}\r\n          <br/>\r\n        </span>\r\n        { this.props.isAdmin &&\r\n          // <Grid container>\r\n          //   <Grid item md={10}>\r\n              <Select\r\n                className = {\"status-bar-textfield\"}\r\n                value={statusMsg}\r\n                onChange={e => {e.preventDefault(); console.log('change!'); this.props.handleStatusInput(this.statuses.indexOf(e.target.value))}}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n              >\r\n                {this.statuses.map((status, i) => <MenuItem value={status} key={i}>{status}</MenuItem>)}\r\n                \r\n              </Select>\r\n            // </Grid>\r\n\r\n          //   <Grid item md={2}>\r\n          //     <Button fullWidth variant=\"contained\" color=\"primary\" disabled={!dirtyBit} onClick={this.saveData}>Save</Button>\r\n          //   </Grid>\r\n          // </Grid>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusBlock;","import React from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\"\r\n\r\nclass Notes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    var notes;\r\n    try {\r\n      notes = JSON.parse(props.notes)\r\n    } catch {\r\n      notes = []\r\n    }\r\n    this.state = {\r\n      notes: notes,\r\n      newNote: \"\"\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  generateNoteColor(author) {\r\n    // Color generated based on author\r\n    // First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\r\n    let hash = 0;\r\n    let i, chr;\r\n    for (i = 0; i < author.length; i++){\r\n      chr = author.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + chr;\r\n      hash |= 0;\r\n    }\r\n\r\n    // Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\r\n    const c = (hash & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n    \r\n    const luminence = parseInt(c.slice(0, 2), 16) + parseInt(c.slice(2, 4), 16) + parseInt(c.slice(4, 6), 16)\r\n\r\n    return {\r\n      bg: \"#\" + \"00000\".substring(0, 6 - c.length) + c,\r\n      text: luminence >= 400 ? \"#000000\" : \"#ffffff\"\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n     // Send post request\r\n\r\n    // fetch(`/order-information/${this.props.data['pk']}/`, {\r\n    //   method: 'PATCH',\r\n    //   headers: {\r\n    //     'Accept': 'application/json',\r\n    //     'Content-type': 'application/json',\r\n    //     'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     \"notes\": JSON.stringify(newNotesArr)\r\n    //   })\r\n    // }).then(res => {\r\n    //   if (res.ok){\r\n    //     return res.json()\r\n    //   }\r\n    //   throw new Error(`Something went wrong with error code ${res.status}`)\r\n    // })\r\n    // .then(res => {\r\n    //   this.setState({\r\n    //     newNote: \"\",\r\n    //     notes: newNotesArr\r\n    //   });\r\n    // }, err => {\r\n    //   console.error(\"Unable to update note\");\r\n    //   console.error(err);\r\n    // })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {newNote, notes, dirtyBit} = this.props.noteState\r\n\r\n    return (\r\n      <div className={`block fullwidth ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          Notes\r\n        </h2>\r\n        \r\n        <Grid container>\r\n          <Grid item md={9}>\r\n            <TextField\r\n              value={newNote}\r\n              onChange={this.props.handleNewNoteInput}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Create a New Note\"\r\n              type=\"text\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={3} className={\"horz-padding\"}>\r\n            <Button className={\"create-bttn\"} fullWidth variant=\"contained\" color=\"primary\" disabled={newNote.length == 0} onClick={this.props.saveNote}>\r\n              Create Note\r\n            </Button> \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div className={\"notes-container\"}>\r\n          {notes.map((note, i) => <NoteBlock note={note} color={this.generateNoteColor(note.author)} key={i} />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */\r\nfunction NoteBlock(props) {\r\n  const {dirtyBit, date, author, note} = props.note;\r\n  return (\r\n    <div className={`note-block ${dirtyBit ? \"unsaved\" : \"\"}`} style={{backgroundColor: props.color.bg}}>\r\n      \r\n      <p className=\"note-block-metadata\" style={{color: props.color.text}}>\r\n        <span className=\"note-block-date\">\r\n          {date}\r\n        </span>\r\n        {\" by \"}\r\n        <span className=\"note-block-author\">\r\n          {author}{dirtyBit && <strong>*</strong>}\r\n        </span>\r\n      </p>\r\n      <p className=\"note-block-content\" style={{color: props.color.text}}> \r\n        {note}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;","import React from \"react\";\r\nimport {Select, MenuItem, TextField, InputLabel, Button} from \"@material-ui/core\";\r\n\r\n/**\r\n * Component to display general info about a ramp request\r\n *\r\n * @prop {boolean} isAdmin - When true, admin-specific functionality will appear\r\n**/\r\nclass GeneralInfo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {data} = props;\r\n    this.state = {\r\n      data: { // default data\r\n        \"Ramp #\": {\r\n          value: data[\"pk\"],\r\n          options: [],\r\n          clientEditable: false, // TODO: make editable\r\n          adminEditable: false,\r\n        },\r\n        \"Client Name\": {\r\n          value: `${data[\"first_name\"]} ${data[\"last_name\"]}`,\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        \"Delivery Address\": {\r\n          value: data[\"shipping_address\"],\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        \"Billing Address\": {\r\n          value: data[\"billing_address\"],\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        // \"Liability Waiver\": { \r\n        //   value: \"\",\r\n        //   options: [\"Not Signed\", \"Signed\"],\r\n        //   link: \"\", //exlusive to liability waiver\r\n        //   clientEditable: false,\r\n        //   adminEditable: false,\r\n        // },\r\n        \"Subsidy Info\": {\r\n          value: data[\"subsidize\"] ? \"Subsidized\" : \"Not Subsidized\",\r\n          options: [\"Subsidized\", \"Not Subsidized\"],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const dataCopy = {...this.state.data};\r\n    const {dirtyBit} = this.props.infoState;\r\n    \r\n    return (\r\n      <div className={`block ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          General Info\r\n        </h2>\r\n        <div className={\"general-info-container\"}>\r\n          { // This is where we populate the block with our data\r\n            Object.entries(this.state.data).map((x, i) => {\r\n              const key = x[0];\r\n              const {value, options, clientEditable, adminEditable} = x[1];\r\n              const editable = (this.props.isAdmin && adminEditable) || (!this.props.isAdmin && clientEditable)\r\n\r\n              return (\r\n                <div>\r\n                  <InputLabel id={`geninfo-select-${i}`} shrink>\r\n                    {`${key}${!editable ? \" (Read-Only)\" : \"\"}`}\r\n                  </InputLabel>\r\n                  {options.length > 0 ? \r\n                    (\r\n                        <Select\r\n                          className={\"general-info-input\"}\r\n                          labelId={`geninfo-select-${i}`}\r\n                          key={i}\r\n                          defaultValue={value}\r\n                          fullWidth\r\n                          type=\"text\"\r\n                          variant={editable ? \"outlined\" : \"standard\"}\r\n                          InputProps={{\r\n                            readOnly: !editable\r\n                          }}\r\n                        >\r\n                          {\r\n                            options.map(opt => (editable || opt == value) ? <MenuItem value={opt}>{opt}</MenuItem> : null)\r\n                          }\r\n                        </Select>\r\n                    ) : (\r\n                      <TextField\r\n                        className={\"general-info-input\"}\r\n                        labelId={`geninfo-select-${i}`}\r\n                        key={i}\r\n                        defaultValue={value}\r\n                        fullWidth\r\n                        type=\"text\"\r\n                        variant={editable ? \"outlined\" : \"standard\"}\r\n                        InputProps={{\r\n                          readOnly: !editable\r\n                        }}\r\n                      />\r\n                    )\r\n                  }\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {/* // TODO: add back in, im just tired right now. */}\r\n        {/* <Button fullWidth variant=\"contained\" color=\"primary\" >Save</Button> */}\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\n\r\nexport default GeneralInfo;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\"; \r\n\r\nclass PhotoGallery extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {dirtyBit, leftSrc, entrySrc, rightSrc} = this.props.galleryState;\r\n    return (\r\n      <div className={`block ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          Photo Gallery\r\n        </h2>\r\n      \r\n        <Grid container spacing={1}  >\r\n       \r\n          <Grid item xs={12} md={4}   >\r\n          \r\n           <h3 className={\"center-text\"}>\r\n              Left Step Photo\r\n            </h3>\r\n            <div style = {{overflow:\"scroll\"}}>\r\n            <img  alt=\"left-step-photo\" src={leftSrc} className={\"center-block\"} />\r\n            </div>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12} md={4}   >\r\n          <h3 className={\"center-text\"}>\r\n              Entryway Photo\r\n            </h3>\r\n            <div style = {{overflow:\"scroll\"}}>\r\n            <img  alt=\"left-step-photo\" src={entrySrc} className={\"center-block\"} />\r\n            </div>\r\n          </Grid>\r\n\r\n          \r\n          <Grid item xs={12} md={4}   >\r\n          <h3 className={\"center-text\"}>\r\n              Right Step Photo\r\n            </h3>\r\n            <div style = {{overflow:\"scroll\"}}>\r\n            <img  alt=\"left-step-photo\" src={rightSrc} className={\"center-block\"} />\r\n            </div>\r\n          </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PhotoGallery;","import React from \"react\";\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport RampDimensions from \"./RampDimensions\";\r\nimport StatusBlock from \"./StatusBlock\";\r\nimport Notes from \"./Notes\";\r\nimport GeneralInfo from \"./GeneralInfo\";\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport \"../Admin/admin_styles.css\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass RampInfoPage extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    // let new_progress = \"status\" in props.data ? this.statuses.indexOf(props.data[\"status\"]) : -1\r\n    // if (new_progress >= this.statuses.length || new_progress < -1){\r\n    //   new_progress = -1;\r\n    // }\r\n\r\n    this.state = {\r\n      noteState: {\r\n        newNote: \"\",\r\n        notes: JSON.parse(props.data[\"notes\"]).map(x => ({ ...x, dirtyBit: false})),\r\n        dirtyBit: false\r\n      },\r\n      statusState: {\r\n        statusInput: parseInt(props.data[\"status\"]),  // This is what will be posted when \"save changes\" is pressed.\r\n        oldStatus: parseInt(props.data[\"status\"]),\r\n        dirtyBit: false\r\n      },\r\n      infoState: {\r\n        dirtyBit: false\r\n      },\r\n      galleryState: {\r\n        dirtyBit: false,\r\n        leftSrc: props.data[\"step_left_photo\"],\r\n        entrySrc: props.data[\"entryway_photo\"],\r\n        rightSrc: props.data[\"step_right_photo\"]\r\n      }\r\n    }\r\n  }\r\n\r\n  overallDirtyBit = () => {\r\n    const states = [this.state.noteState, this.state.statusState, this.state.infoState];\r\n    return states.some(x => x.dirtyBit)\r\n  }\r\n\r\n  saveChanges = e => {\r\n    e.preventDefault();\r\n    const newOrder = {};\r\n    Object.assign(newOrder, this.props.data);\r\n\r\n    if (this.state.noteState.dirtyBit){\r\n      const serializedNotes = this.state.noteState.notes.map(note => ({\r\n        date: note.date,\r\n        author: note.author,\r\n        note: note.note\r\n      }));\r\n      newOrder[\"notes\"] = JSON.stringify(serializedNotes);\r\n    }\r\n    if (this.state.statusState.dirtyBit){\r\n      newOrder[\"status\"] = JSON.stringify(this.state.statusState.statusInput);\r\n    }\r\n    // TODO: general info\r\n\r\n    this.props.verifyTokens().then(valid => {\r\n      if (!valid)\r\n        return;\r\n      fetch(`/order-information/${newOrder[\"pk\"]}/`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token-access')}`   \r\n        },\r\n        body: JSON.stringify(newOrder)\r\n      })\r\n      .then (res => {\r\n        res.json();\r\n      })\r\n      .then (res => {\r\n        console.log(res);\r\n        // TODO: update dirty bits\r\n        const noteStateCopy = {}\r\n        Object.assign(noteStateCopy, this.state.noteState)\r\n        noteStateCopy.dirtyBit = false;\r\n        noteStateCopy.notes = noteStateCopy.notes.map(x => ({ ...x, dirtyBit: false}));\r\n  \r\n        const statusStateCopy = {}\r\n        Object.assign(statusStateCopy, this.state.statusState)\r\n        statusStateCopy.dirtyBit = false;\r\n  \r\n        const infoStateCopy = {}\r\n        Object.assign(infoStateCopy, this.state.infoState)\r\n        infoStateCopy.dirtyBit = false;\r\n  \r\n        this.setState({\r\n          noteState: noteStateCopy,\r\n          statusState: statusStateCopy,\r\n          infoState: infoStateCopy\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.error(\"there was an error with saving changes!\", err);\r\n        console.error(\"request:\", newOrder )\r\n      })\r\n    });\r\n  }\r\n\r\n  // We place states here so that there is simply ONE universal save button\r\n  handleNewNoteInput = e => {\r\n    e.preventDefault();\r\n    // make a copy of the note state, and then update the newNote property\r\n    const noteStateCopy = {}\r\n    Object.assign(noteStateCopy, this.state.noteState)\r\n    noteStateCopy.newNote = e.target.value\r\n    // Save the note state\r\n    this.setState({\r\n      noteState: noteStateCopy \r\n    });\r\n  }\r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"December\"\r\n    ];\r\n\r\n    const now = new Date();\r\n    const date = `${months[now.getMonth()]} ${now.getDate()}, ${now.getFullYear()}`;\r\n    const note = this.state.noteState.newNote;\r\n\r\n    const noteStateCopy = {};\r\n    Object.assign(noteStateCopy, this.state.noteState);\r\n    noteStateCopy.newNote = \"\";\r\n    noteStateCopy.notes.push({\r\n      date: date,\r\n      author: localStorage.getItem(\"username\"), // TODO: update\r\n      note: note,\r\n      dirtyBit: true\r\n    });\r\n    noteStateCopy.dirtyBit = true;\r\n    this.setState({\r\n      noteState: noteStateCopy\r\n    })\r\n  }\r\n\r\n  handleStatusInput = status => {\r\n    const statusStateCopy = {};\r\n    Object.assign(statusStateCopy, this.state.statusState);\r\n\r\n    statusStateCopy.statusInput = status;\r\n    statusStateCopy.dirtyBit = statusStateCopy.statusInput != statusStateCopy.oldStatus; // Remains as such until the entire dash's changes are saved.\r\n    this.setState({\r\n      statusState: statusStateCopy\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {data, isAdmin} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={4}>\r\n            <GeneralInfo isAdmin={isAdmin} data={ data } infoState={this.state.infoState}/>\r\n          </Grid>\r\n          <Grid item container xs={8}>\r\n            <Grid container>\r\n              <Grid item xs={6}>\r\n                <RampDimensions data={ data } isAdmin={isAdmin} />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <StatusBlock isAdmin={isAdmin} statusState={this.state.statusState} date={data[\"date_created\"]} handleStatusInput={this.handleStatusInput}/>\r\n              </Grid>\r\n            </Grid>\r\n            {isAdmin \r\n              && <Notes noteState={this.state.noteState} saveNote={this.saveNote} handleNewNoteInput={this.handleNewNoteInput}/>}\r\n          </Grid>\r\n        </Grid>\r\n        <PhotoGallery galleryState={this.state.galleryState}/>\r\n        {isAdmin && \r\n          <Button fullWidth variant=\"contained\" color=\"primary\" disabled={!this.overallDirtyBit()} onClick={this.saveChanges} >\r\n            Save\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RampInfoPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Navbar from \"../Navbar\";\r\nimport AdminDashboard from \"./Admin/admin_dash\";\r\nimport ClientDashboard from \"./client_dash\";\r\nimport RampInfoPage from \"./RampInfoPage\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass Dashboard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      pageStack: [], // when we navigate to a \"sub-page\", push to stack. When we \"go back\", pop from stack\r\n      isLoaded: false, // \r\n      error:null,\r\n      isAdmin: localStorage.getItem(\"is-admin\") || \"false\",\r\n      username: localStorage.getItem(\"username\") || \"\",\r\n      users:[]\r\n    }\r\n  }\r\n\r\n  pushToStack = (component) => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.push(component);\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  goBack = () => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.pop();\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  gotoFuncs = {\r\n    ramp_info: (isAdmin,data, verifyTokens) => this.pushToStack(<RampInfoPage goBack = {this.goBack} data = {data} isAdmin={isAdmin} verifyTokens={verifyTokens} />)\r\n  }\r\n\r\n\r\n  render () {\r\n    if (!this.props.loggedIn) // user is not logged in.\r\n      return <Redirect to=\"/\" /> \r\n    \r\n    return (\r\n      <div>\r\n        <Navbar title={`${this.state.isAdmin == \"true\" ? \"Admin\" : \"Client\"} Dashboard - ${this.state.username}`} logout={this.props.logout} goBack={this.goBack} stackSize={this.state.pageStack.length}/>\r\n        <div className={\"content\"}>\r\n          {this.state.pageStack.length == 0 ? \r\n            this.state.isAdmin == \"true\" \r\n              ? <AdminDashboard isAdmin={true} logout={this.props.logout} verifyTokens={this.props.verifyTokens} gotoFuncs={this.gotoFuncs} /> \r\n              : <ClientDashboard isAdmin={false} logout={this.props.logout} verifyTokens={this.props.verifyTokens} gotoFuncs={this.gotoFuncs} /> :\r\n            this.state.pageStack[this.state.pageStack.length - 1]\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\nexport class FormUserDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.form = React.createRef();\r\n    }\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar position=\"static\" style={{ background: '#2F4858', textAlign: 'center' }}>\r\n                        <Typography variant=\"h5\" style={{marginTop:'10px', marginBottom:'10px'}}>\r\n                            Ramp Request Form\r\n                        </Typography>\r\n                    </AppBar>\r\n                    <br />\r\n\r\n                    <form ref={this.form} onSubmit={this.continue} style={{ marginLeft: '7vh', marginTop: '5vh', marginRight: '20vh' }}>\r\n                        <h1>Please Enter Your Information:</h1>\r\n                        <div className=\"formFields\">\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"First Name\"\r\n                                defaultValue=\"\"\r\n                                onChange={this.props.handleChange('firstName')}\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"Last Name\"\r\n                                defaultValue=\"\"\r\n                                onChange={this.props.handleChange('lastName')}\r\n                            />\r\n                        </div> <br />\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"Email\"\r\n                                defaultValue=\"\"\r\n                                onChange={this.props.handleChange('email')}\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"Phone Number\"\r\n                                defaultValue=\"\"\r\n                                onChange={this.props.handleChange('phoneNumber')}\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"standard-required\"\r\n                                label=\"Organization Name\"\r\n                                defaultValue=\"\"\r\n                                onChange={this.props.handleChange('companyName')}\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                        </div>\r\n\r\n                        <br />\r\n                        <TextField\r\n                            required\r\n                            id=\"standard-required\"\r\n                            label=\"Delivery Address\"\r\n                            defaultValue=\"\"\r\n                            onChange={this.props.handleChange('deliveryAddress')}\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            id=\"standard-required\"\r\n                            label=\"Billing Address\"\r\n                            defaultValue=\"\"\r\n                            onChange={this.props.handleChange('billingAddress')}\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            id=\"standard-required\"\r\n                            label=\"Delivery Type\"\r\n                            defaultValue=\"\"\r\n                            onChange={this.props.handleChange('deliveryType')}\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            id=\"standard-required\"\r\n                            label=\"Ramp Color\"\r\n                            defaultValue=\"\"\r\n                            onChange={this.props.handleChange('rampColor')}\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <label>\r\n                            <Checkbox\r\n                                onClick={this.props.handleCheck('subsidize')}\r\n                                name=\"check\"\r\n                                style={{ marginLeft: '40px' }}\r\n                            />\r\n                            <span>Subsidize</span>\r\n                        </label>\r\n                        <br /> <br />\r\n                        <div style={{margin:10}}>\r\n                            <Button\r\n                                style={{ right: 10 }} color=\"primary\" variant=\"contained\" onClick={this.back}>Previous</Button>\r\n                            <Button\r\n                                type=\"submit\" color=\"primary\" variant=\"contained\" >Next</Button>\r\n                        </div>\r\n\r\n                        <div style={{ maxWidth: '65vh'}}>\r\n                            <h4>\r\n                                *Please note that we’re currently experiencing a bit of a backlog of ramp requests.\r\n                                We require all the info as mentioned above in order to send you a quote. Upon quote approval, there’s typically an approximate 4-6 weeks turnover.\r\n                                We are so excited that our awareness raising efforts have worked but we’re a very small team working hard at getting more ramps to more steps!\r\n                            </h4>\r\n                        </div>\r\n                    </form>\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\nexport default FormUserDetails\r\n","import React from \"react\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pictures: [] };\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  async onDrop(picture) {\r\n    this.setState({\r\n      pictures: this.state.pictures.concat(picture),\r\n    });\r\n\r\n    var file = picture[0];\r\n    const form = new FormData();\r\n    form.append('file', file)\r\n    form.append('upload_preset', process.env.REACT_APP_CLOUD_PRESET)\r\n\r\n    const request = new Request(process.env.REACT_APP_CLOUD_URL, {\r\n      method: \"POST\",\r\n      body: form,\r\n    });\r\n\r\n    var response = await fetch(request)\r\n    var data = await response.json()\r\n    this.props.handlePicture(this.props.imageIdentifier, data.url);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            border: \"1px solid blue\",\r\n            width: 310,\r\n          }}\r\n        >\r\n          <div style={{ marginRight: \"15px\" }}>\r\n            <ImageUploader\r\n              withIcon={false}\r\n              withPreview={true}\r\n              label=\"\"\r\n              buttonText=\"Upload Images\"\r\n              onChange={(e) => this.onDrop(e)}\r\n              imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".svg\"]}\r\n              maxFileSize={9999999}\r\n              fileSizeError=\" file size is too big\"\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Upload />, rootElement);\r\n\r\nexport default Upload;\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import ImageUploader from 'react-images-upload';\r\nimport Upload from \"./Upload/Upload\"\r\n\r\nexport class ImageUpload extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    \r\n\r\n    this.state = {\r\n        show:false\r\n    }\r\n\r\n}\r\n  continue = e => {\r\n    e.preventDefault();\r\n    if (this.props.Uploaded){\r\n      this.props.nextStep();\r\n    }else{\r\n\r\n      this.setState({\r\n        show:true\r\n      });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { values } = this.props;\r\n\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar position=\"static\" style={{ background: '#2F4858', textAlign: 'center' }}>\r\n            <Typography variant=\"h5\" style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n              Ramp Request Form\r\n                        </Typography>\r\n          </AppBar>\r\n\r\n\r\n          <div style={{ marginLeft: '7vh', marginTop: '5vh', height: '100%' }}>\r\n            <h1>Upload Ramp Images:</h1>\r\n            <h3>StopGap requires three images to process your ramp request.</h3>\r\n\r\n\r\n\r\n            <form onSubmit={this.continue}>\r\n              <ul>\r\n                <li>\r\n                  <h4>Photo of entire entryway</h4>\r\n                  <div style={{ maxWidth: '50vh' }}>\r\n                    Take a look at the entryway and envision the placement of the ramp.\r\n                    Take a picture of the entire entrance including the step in front of the doorway and the sidewalk.\r\n                    For a safe turning radius, you will need 42″ of space in addition to the length of the ramp (which is 6 times the height of the step).\r\n                </div>\r\n                <br />\r\n                <div><Upload imageIdentifier=\"entrywayPhoto\" handlePicture={this.props.handlePicture} required></Upload></div>\r\n                </li>\r\n                <li>\r\n                  <h4>Photo of Left Side Step</h4>\r\n                  <div><Upload imageIdentifier=\"stepLeftPhoto\" handlePicture={this.props.handlePicture} required></Upload></div>\r\n                </li>\r\n                <li>\r\n                  <h4>Photo of Right Side Step</h4>\r\n                  <div><Upload imageIdentifier=\"stepRightPhoto\" handlePicture={this.props.handlePicture} required></Upload></div>\r\n                </li>\r\n              </ul>\r\n            </form>\r\n            <br />\r\n            <hr style={{maxWidth:'90%'}}></hr>\r\n            <br />\r\n            <div style={{ maxWidth: '50vh' }}>\r\n              Please estimate the height of your step and enter them below.\r\n              Your measurement selection will be verified by StopGap staff by evaluating your measurement photo submissions.\r\n              We may request new or additional photos to best design the ramp to fit your step.\r\n                        </div>\r\n            <br />\r\n            <TextField\r\n              required\r\n              style={{ width: '30vh' }}\r\n              type=\"number\"\r\n              inputProps={{ min: \"0\", max: \"100\", step: \"0.01\" }}\r\n              id=\"standard-required\"\r\n              label=\"Step Height - Left\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('leftStepHeight')}\r\n            />\r\n            <br /> <br />\r\n            <TextField\r\n              required\r\n              style={{ width: '30vh' }}\r\n              type=\"number\"\r\n              inputProps={{ min: \"0\", max: \"100\", step: \"0.01\" }}\r\n              id=\"standard-required\"\r\n              label=\"Step Height - Right\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('rightStepHeight')}\r\n            />\r\n            {this.state.show &&<h4 style={{ left: 10, color:'red' }} >\r\n              Please ensure that you've uploaded all the necessary photos.\r\n              </h4>}\r\n            <br /> <br />\r\n            \r\n            <div style={{ marginBottom: '10px' }}>\r\n              <Button\r\n                style={{ right: 10 }} color=\"primary\" variant=\"contained\" onClick={this.back}>Previous\r\n              </Button>\r\n              <Button\r\n                type=\"submit\" color=\"primary\" variant=\"contained\" onClick={this.continue}>Next\r\n              </Button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          \r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { Component } from 'react'\r\nimport {Box, TextField, Checkbox, FormControlLabel} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nexport class LiabilityWaiver extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n\t// this.props.handleSubmitWaiver();\r\n  // this.props.handleSubmitOrder();\r\n  this.props.handleUser();\r\n\tthis.props.nextStep();\r\n  }\r\n\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>Liability Waiver, Assumption of Risk and Idemnity </h1>\r\n        <form onSubmit={this.continue}>\r\n        <div className='container' style={{ width: '900px' }}>\r\n\r\n          <Box style={{ float: \"left\" }} border={3} marginLeft='5vh' maxWidth=\"900px\">Congratulations on joining The Ramp Project! By signing this document you waive certain legal rights, including the right to sue. Please read carefully before signing.\r\n                    <br></br><br></br>I understand that The StopGap Foundation (“StopGap”) will construct and provide my business with a temporary ramp to be used to access my single stepped storefront. Once StopGap delivers the ramp, it is my property and my sole responsibility.\r\n                    <br></br><br></br>I understand that in order to participate in The Ramp Project, I must agree to and sign this waiver and indemnity.\r\n                    <br></br><br></br>I know that this ramp is not intended to be a permanent ramp to my storefront and that the ramp should only be used when needed. When in use, the ramp should be level and flush against the step with no gaps present. When the ramp is not in use, it should be stored in a safe location.\r\n                    <br></br><br></br>I understand that the use or storage of the ramp could cause injury to persons or property. I accept all of the risks of my participation in The Ramp Project and the possibility of personal injury, death, property damage, or loss, whether caused by the negligence of Stop Gap or otherwise.\r\n                    <br></br><br></br>I assume full responsibility and all liability for my acts or omissions, whether negligent or otherwise, in connection with my participation in The Ramp Project. I voluntarily and unconditionally release StopGap, its employees, contractors, agents, directors or volunteers from all claims including, but not limited to, personal injury and property damage, whether caused by negligence or otherwise, which I have or may have in the future.\r\n                    <br></br><br></br>I agree to indemnify StopGap, its employees, contractors, agents, directors or volunteers for any and all liabilities, damages, costs, claims, suits, and actions that are directly or indirectly related to my activities or my participation in The Ramp Project. I agree not to sue or bring legal action against anyone who could seek contribution or indemnity from StopGap, its employees, contractors, agents, directors or volunteers under the Negligence Act.\r\n                </Box>\r\n          <FormControlLabel\r\n            required\r\n            control={<Checkbox required onChange={this.handleChange} name=\"check\" />}\r\n            label=\"I understand and agree to the Liability Waiver.\"\r\n            style={{ marginLeft: '40px' }}\r\n          />\r\n\r\n        <Box style={{ float:'left', marginTop: '40px', marginLeft:'5vh' }} maxWidth='500px' border={3}>\r\n         \r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Owner First/Last Name\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('managerFirst')}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Owner Signature\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('managerSig')}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Witness Name\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('witnessName')}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Witness Signature\"\r\n              defaultValue=\"\"\r\n              onChange={this.props.handleChange('witnessSig')}\r\n            />\r\n            <br></br>\r\n          <Button\r\n            style={{ right: 1, marginTop: '10px' }} color=\"primary\" variant=\"contained\" onClick={this.back}>Previous\r\n         </Button>\r\n          <Button type = \"submit\" style={{ left: 6, marginTop: '10px' }} color=\"primary\" variant=\"contained\">\r\n            Next\r\n          </Button>\r\n           </Box>\r\n            </div>\r\n          </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LiabilityWaiver\r\n","import React, { Component } from 'react'\r\nimport FormUserDetails from './FormUserDetails';\r\nimport ImageUpload from './ImageUpload';\r\nimport LiabilityWaiver from './LiabilityWaiver';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nexport class UserForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        \r\n\r\n        this.state = {\r\n            step: 1, \r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            companyName: '',\r\n            phoneNumber: '', \r\n            deliveryAddress: '',\r\n            deliveryType: '',\r\n            rampColor: '',\r\n            managerFirst: '',\r\n            managerSig: '',\r\n            witnessName: '',\r\n            witnessSig: '',\r\n            entrywayPhoto: '',\r\n            stepLeftPhoto: '',\r\n            stepRightPhoto: '',\r\n            leftStepHeight:'',\r\n            rightStepHeight:'',\r\n            subsidize: false,\r\n            waiver:'',\r\n            user: '',\r\n            isLoaded: false,\r\n            Uploaded:false,\r\n        }\r\n\r\n        this.handlePicture = this.handlePicture.bind(this)\r\n    }\r\n\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n    // Handle Field Changes\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value})\r\n        if (this.state.rightStepHeight != '' && this.state.leftStepHeight != ''  &&\r\n        this.state.entrywayPhoto != '' && this.state.stepLeftPhoto != '' && this.state.stepRightPhoto != ''){\r\n            this.setState({\r\n                Uploaded: true\r\n            });\r\n            \r\n        }\r\n    }\r\n\t\r\n\thandleCheck = input => e => {\r\n        this.setState({[input]: !this.state.subsidize})\r\n    }\r\n\r\n    handlePicture(input, url) {\r\n\r\n        \r\n\r\n        if (input == \"entrywayPhoto\") {\r\n            this.setState({\r\n                entrywayPhoto: url\r\n            });\r\n        } else if (input == \"stepLeftPhoto\") {\r\n            this.setState({\r\n                stepLeftPhoto: url\r\n            });\r\n        } else if (input == \"stepRightPhoto\") {\r\n            this.setState({\r\n                stepRightPhoto: url\r\n            });\r\n        }\r\n\r\n        if (this.state.rightStepHeight != '' && this.state.leftStepHeight != ''  &&\r\n        this.state.entrywayPhoto != '' && this.state.stepLeftPhoto != '' && this.state.stepRightPhoto != ''){\r\n            this.setState({\r\n                Uploaded: true\r\n            });\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    handleUser = () => {\r\n        this.props.verifyTokens().then(valid => {\r\n            if (!valid)\r\n                return;\r\n            fetch(\"/users\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n                }\r\n                })\r\n                .then(res => {\r\n                if (res.ok)\r\n                    return res.json()\r\n                throw new Error(`Something went wrong with error code ${res.status}`)\r\n                })\r\n                .then(\r\n                (result) => {\r\n                    const users = result[\"results\"];\r\n                    var id\r\n                    users.map(x => {\r\n                    if (x[\"username\"] == this.props.username){\r\n                        id = x[\"pk\"]\r\n            \r\n                        \r\n                    }\r\n                    })\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    user:id\r\n                    });\r\n                    this.handleSubmitWaiver()\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    });\r\n                }\r\n            )\r\n        });\r\n    }\r\n\t\r\n    handleSubmitOrder = () => {\r\n        const data ={\r\n        // \"pk\":1,\r\n        \"user\":this.state.user,\r\n        \"first_name\":this.state.firstName,\r\n        \"last_name\":this.state.lastName,\r\n        \"email\":this.state.email,\r\n        \"company\":this.state.companyName,\r\n        \"phone_number\":this.state.phoneNumber,\r\n        \"billing_address\": this.state.deliveryAddress,\r\n        \"shipping_address\": this.state.billingAddress,\r\n        \"waiver\":this.state.waiver,\r\n        \"entryway_photo\": this.state.entrywayPhoto,\r\n        \"step_left_photo\": this.state.stepLeftPhoto,\r\n        \"step_right_photo\": this.state.stepRightPhoto,\r\n        \"step_left_height\":this.state.leftStepHeight,\r\n        \"step_right_height\":this.state.rightStepHeight,\r\n        \"ramp_colour\":this.state.rampColor,\r\n        \"delivery_method\":this.state.deliveryType,\r\n        \"subsidize\":this.state.subsidize,\r\n        \"status\":0,\r\n\t\t\"notes\":\"[]\"\r\n        }\r\n\r\n        this.props.verifyTokens().then(valid => {\r\n            if (!valid)\r\n                return;\r\n            const token = localStorage.getItem('token-access')\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                    \r\n                },\r\n                body: JSON.stringify(data)\r\n                \r\n            };\r\n            fetch('/order-information/', requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                \r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error });\r\n                console.error('There was an error!', error);\r\n                console.log( error);\r\n            }); \r\n        });\r\n    }\r\n\t\r\n\thandleSubmitWaiver = () => {\r\n      \r\n\t\tconst data ={\r\n        //\"pk\":1,\r\n       \r\n\t\t\"user\":this.state.user,\r\n        \"signatory_first_name\":this.state.managerFirst,\r\n        \"signatory_last_name\":this.state.managerFirst,\r\n        \"signatory_signature\":this.state.witnessSig,\r\n        \"witness_first_name\":this.state.witnessName,\r\n        \"witness_last_name\":this.state.witnessName,\r\n        \"witness_signature\":this.state.witnessSig}\r\n\r\n        this.props.verifyTokens().then(valid => {\r\n            if (!valid)\r\n                return;\r\n            const token = localStorage.getItem('token-access')\r\n            console.log(token);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(data)\r\n            };\r\n            fetch('/waiver-information/', requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n        \r\n                this.setState({ waiver: data.pk })\r\n                this.handleSubmitOrder()\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error });\r\n                console.error('There was an error!', JSON.stringify(data));\r\n            }); \r\n        });\r\n\t}\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        \r\n   \r\n\r\n        switch (step) {\r\n            case 0:\r\n                return <Redirect to=\"/dashboard\" />\r\n            case 1: \r\n                return (\r\n                    <FormUserDetails\r\n                        prevStep={this.prevStep}\r\n                        nextStep={this.nextStep}\r\n                        handleChange={this.handleChange}\r\n\t\t\t\t\t\thandleCheck={this.handleCheck}\r\n                    \r\n                    />\r\n                )\r\n            case 2:\r\n                return (\r\n                    <ImageUpload\r\n\t\t\t\t\t\tprevStep={this.prevStep}\r\n                        nextStep={this.nextStep}\r\n                        handlePicture={this.handlePicture}\r\n                        handleChange={this.handleChange}\r\n                        Uploaded = {this.state.Uploaded}\r\n                    />\r\n                )\r\n            case 3:\r\n                return (\r\n                    <LiabilityWaiver\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n\t\t\t\t\t\thandleSubmitWaiver={this.handleSubmitWaiver}\r\n                        handleSubmitOrder={this.handleSubmitOrder}\r\n                        handleUser={this.handleUser}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                )\r\n            case 4: \r\n                return (\r\n                    <div>\r\n                        <h1> Thank you! We'll be in contact about your request.</h1>\r\n                        <Link to=\"/dashboard\">\r\n                            Go back home.\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            default:\r\n                return <Redirect to=\"/dashboard\" />\r\n        }\r\n        // return (\r\n        //     <div>\r\n                \r\n        //     </div>\r\n        \r\n    }\r\n}\r\n\r\nexport default UserForm;\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './react-components/Login';\r\nimport Dashboard from './react-components/Dashboard';\r\nimport UserForm from './react-components/RequestForm';\r\nimport { LinearProgress } from '@material-ui/core';\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false, // by default, no one is logged in\r\n      invalidLogin: false,\r\n      loginMsg: \"\",\r\n      isAdmin: false, // TODO: properly store this\r\n      isCurrentlyCheckingStorageForLogin: true,\r\n      error: null,\r\n      isLoaded: false,\r\n      username:\"\"\r\n      \r\n    };\r\n  }\r\n\r\n  refresh = () => { // idk why i made this a seperate function, but w/e\r\n    console.log('refreshing!')\r\n    const refreshToken = localStorage.hasOwnProperty(\"token-refresh\") \r\n      ? localStorage.getItem(\"token-refresh\") : \"\";\r\n\r\n    // token is NOT valid, so attempt to refresh.\r\n    fetch(\"/api/token/refresh/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        refresh: refreshToken\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if ('access' in res){\r\n          localStorage.setItem(\"token-access\", res.access)\r\n          this.setState({\r\n            loggedIn: true,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            loggedIn: false,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          })\r\n        }\r\n    }, error => { // REFRESH ERROR\r\n      console.error(error)\r\n      this.setState({\r\n        loggedIn: false,\r\n        isCurrentlyCheckingStorageForLogin: false\r\n      })\r\n    })\r\n  }\r\n\r\n  login = (user, pwd, isAdmin) => {\r\n    console.log(\"StopGap: Logging in...\");\r\n    if (this.state.loggedIn){ //already logged in.\r\n      console.error(\"Stopgap: user already logged in.\");\r\n      // Refreshes the page\r\n      this.setState({\r\n        loggedIn: false,\r\n      });\r\n      this.setState({\r\n        loggedIn: true,\r\n      });\r\n      return;\r\n    }\r\n    // validate token\r\n    fetch(\"/api/token/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"username\": user,\r\n        \"password\": pwd\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res)\r\n      if ('detail' in res){\r\n        localStorage.removeItem('token-access')\r\n        localStorage.removeItem('token-refresh')\r\n        this.setState({\r\n          loggedIn: false,\r\n          invalidLogin: true,\r\n          loginMsg: \"Login credentials not valid.\"\r\n        });\r\n      } else if ('access' in res && 'refresh' in res && 'user' in res && 'isAdmin' in res){\r\n        // First check if the user is of the correct account type (that is, only clients can access the client dashboard and vice versa)\r\n        if (res.isAdmin != isAdmin){\r\n          this.setState({\r\n            loggedIn: false,\r\n            username:user,\r\n            invalidLogin: true,\r\n            loginMsg: `Attempting to use a${res.isAdmin ? \"n admin\" : \" client\"} account to access the ${isAdmin ? \"admin\" : \"client\"} dashboard`\r\n          });\r\n        } else {\r\n          localStorage.setItem('token-access', res.access);\r\n          localStorage.setItem('token-refresh', res.refresh);\r\n          localStorage.setItem('username', res.user);\r\n          localStorage.setItem('is-admin', res.isAdmin);\r\n          this.setState({\r\n            loggedIn: true,\r\n            isAdmin: isAdmin,\r\n            invalidLogin: false,\r\n            username:user,\r\n            loginMsg: \"\"\r\n          });\r\n        }\r\n      }\r\n    }, err => {\r\n      this.setState({\r\n        loggedIn: false,\r\n        invalidLogin: true,\r\n        loginMsg: \"An error occurred while attempting to validate login credentials.\"\r\n      });\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  register = (username, password, first_name, last_name, isAdmin) => {\r\n    console.log(\"StopGap: Registering new user...\");\r\n\r\n    // User already logged in.\r\n    if (this.state.loggedIn){\r\n      console.error(\"Stopgap: user already logged in.\");\r\n      // Refreshes the page\r\n      this.setState({\r\n        loggedIn: false,\r\n        username:username\r\n      });\r\n      this.setState({\r\n        loggedIn: true,\r\n        username:username\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Register user using Django API\r\n    fetch(\"/users/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"username\": username,\r\n        \"password\": password,\r\n        \"email\": username,\r\n        \"first_name\": first_name,\r\n        \"last_name\": last_name,\r\n        \"is_staff\": isAdmin\r\n      })\r\n    }).then(res => {\r\n      // Login user with newly created credentials\r\n      this.login(username, password, isAdmin);\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    this.setState({\r\n      loggedIn: false,\r\n      isAdmin: false,\r\n      invalidLogin: false,\r\n      loginMsg: \"\",\r\n      username:\"\"\r\n    });\r\n    localStorage.removeItem('token-access');\r\n    localStorage.removeItem('token-refresh');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('is-admin');          \r\n  }\r\n\r\n  quickRefresh = () => {\r\n    console.log('(quick) refreshing!')\r\n    const refreshToken = localStorage.hasOwnProperty(\"token-refresh\") \r\n      ? localStorage.getItem(\"token-refresh\") : \"\";\r\n    \r\n    let refreshSuccessful = false;\r\n    let async_flag = true;\r\n    // Otherwise, refresh the token\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/api/token/refresh/\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          refresh: refreshToken\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if ('access' in res){\r\n          localStorage.setItem(\"token-access\", res.access)\r\n          resolve(true);\r\n        } else {\r\n          this.setState({\r\n            loggedIn: false,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          });\r\n          resolve(false);\r\n        }\r\n      }, error => { // REFRESH ERROR\r\n        console.error(error)\r\n        async_flag = false;\r\n        this.setState({\r\n          loggedIn: false,\r\n          isCurrentlyCheckingStorageForLogin: false\r\n        })\r\n        reject(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Params need not contain the authorization token, it will be automatically added.\r\n   */\r\n  verifyTokens = () => {\r\n    this.setState({\r\n      loggedIn: true,\r\n      isCurrentlyCheckingStorageForLogin: true\r\n    });\r\n    // We must verify the token first.\r\n    let accessToken = localStorage.hasOwnProperty(\"token-access\") \r\n      ? localStorage.getItem(\"token-access\") : \"\";\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/api/token/verify/\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          token: accessToken\r\n        })\r\n      })\r\n      .then( res => {\r\n        return res.ok;\r\n      })\r\n      .then( validToken => {\r\n        console.log('ok ok');\r\n        if (validToken){\r\n          console.log('its good');\r\n          resolve(true);\r\n        } else {\r\n          console.log('bouta refresh');\r\n          this.quickRefresh().then(value => {\r\n            resolve(value);\r\n          });\r\n        }\r\n      })\r\n      .catch( err => {\r\n        console.error(err);\r\n        reject(false);\r\n      });\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const accessToken = localStorage.hasOwnProperty(\"token-access\") \r\n      ? localStorage.getItem(\"token-access\") : \"\";\r\n    // check if the existing access token is valid.\r\n    // If not, attempt to retrieve a new one using the refresh token\r\n    fetch(\"/api/token/verify/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        token: accessToken\r\n      })\r\n    })\r\n    .then( res => {\r\n      if (res.ok){\r\n        this.setState({\r\n          loggedIn: true,\r\n          isCurrentlyCheckingStorageForLogin: false\r\n        });\r\n        return;\r\n      }\r\n      console.log('about to refresh . . .')\r\n      this.refresh();\r\n      \r\n    }, error => { // VERIFY ERROR\r\n      console.error(error)\r\n      this.setState({\r\n        loggedIn: false,\r\n        isCurrentlyCheckingStorageForLogin: false\r\n      })\r\n    });\r\n  }\r\n\r\n  render() { \r\n      return (\r\n        <div> \r\n          <BrowserRouter>\r\n            <Switch> { /* Similar to a switch statement - shows the component depending on the URL path */ }\r\n              { /* Each Route below shows a different component depending on the exact path in the URL  */ }\r\n              <Route\r\n                path='/login'\r\n                render={() => (\r\n                  <Login loggedIn={this.state.loggedIn}\r\n                  login={this.login}\r\n                  logout={this.logout}\r\n                  register={this.register}\r\n                  isAdmin={this.state.isAdmin}\r\n                  invalidLogin={this.state.invalidLogin}\r\n                  loginMsg={this.state.loginMsg} />\r\n                )}\r\n              />\r\n              <Route path='/dashboard' render={() => (\r\n                this.state.loggedIn \r\n                  ? <Dashboard loggedIn={this.state.loggedIn} logout={this.logout} verifyTokens={this.verifyTokens} />\r\n                  : <Redirect to='/login' />\r\n              )} />\r\n              <Route exact path='/form' render={() => (<UserForm username ={this.state.username} verifyTokens={this.verifyTokens} />)}/>\r\n              <Route path='/' render={() => (\r\n                this.state.isCurrentlyCheckingStorageForLogin \r\n                  ? (<div>\r\n                      <h1>Loading . . .</h1>\r\n                      <LinearProgress />\r\n                    </div>)\r\n                  : <Redirect path='/' to={this.state.loggedIn ? \"/dashboard\" : \"/login\" } />\r\n              )} />\r\n            </Switch>\r\n            \r\n          </BrowserRouter>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\nconst container = document.getElementById(\"root\");\r\nrender(<App />, container);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}