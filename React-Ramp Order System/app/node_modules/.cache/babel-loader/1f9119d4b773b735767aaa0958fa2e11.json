{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Redirect}from\"react-router-dom\";import\"./styles.css\";import Navbar from\"../Navbar\";import AdminDashboard from\"./Admin/admin_dash\";import ClientDashboard from\"./client_dash\";import RampInfoPage from\"./RampInfoPage\";/* Primary Component for the Admin Dashboard page */var Dashboard=/*#__PURE__*/function(_React$Component){_inherits(Dashboard,_React$Component);var _super=_createSuper(Dashboard);function Dashboard(props){var _this;_classCallCheck(this,Dashboard);_this=_super.call(this,props);_this.pushToStack=function(component){var newStack=_toConsumableArray(_this.state.pageStack);newStack.push(component);_this.setState({pageStack:newStack});};_this.goBack=function(){var newStack=_toConsumableArray(_this.state.pageStack);newStack.pop();_this.setState({pageStack:newStack});};_this.gotoFuncs={ramp_info:function ramp_info(isAdmin,data){return _this.pushToStack(/*#__PURE__*/React.createElement(RampInfoPage,{goBack:_this.goBack,data:data,isAdmin:isAdmin}));}};var name=_this.props.username;console.log(name);_this.state={pageStack:[],// when we navigate to a \"sub-page\", push to stack. When we \"go back\", pop from stack\nisLoaded:false,// \nusername:_this.props.username,error:null,users:[]};return _this;}_createClass(Dashboard,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;fetch(\"/users\",{method:'GET',headers:{'Accept':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token-access'))}}).then(function(res){if(res.ok)return res.json();throw new Error(\"Something went wrong with error code \".concat(res.status));}).then(function(result){var id;var users=result[\"results\"];// users.map(x => {\n//   if (x[\"username\"] == this.props.username){\n//       id = x[\"pk\"]\n//   }\n// })\n_this2.setState({isLoaded:true,users:users});},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){_this2.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){if(!this.props.loggedIn)// user is not logged in.\nreturn/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});console.log(this.state);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navbar,{title:this.props.isAdmin?\"Admin Dashboard\":\"Client Dashboard\",logout:this.props.logout,goBack:this.goBack,stackSize:this.state.pageStack.length}),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},this.state.pageStack.length==0?this.props.isAdmin?/*#__PURE__*/React.createElement(AdminDashboard,{users:this.state.users,logout:this.props.logout,gotoFuncs:this.gotoFuncs}):/*#__PURE__*/React.createElement(ClientDashboard,{users:this.state.users,l:true,logout:this.props.logout,gotoFuncs:this.gotoFuncs}):this.state.pageStack[this.state.pageStack.length-1]));}}]);return Dashboard;}(React.Component);export default Dashboard;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/index.js"],"names":["React","Redirect","Navbar","AdminDashboard","ClientDashboard","RampInfoPage","Dashboard","props","pushToStack","component","newStack","state","pageStack","push","setState","goBack","pop","gotoFuncs","ramp_info","isAdmin","data","name","username","console","log","isLoaded","error","users","fetch","method","headers","localStorage","getItem","then","res","ok","json","Error","status","result","id","loggedIn","logout","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Navbar from \"../Navbar\";\r\nimport AdminDashboard from \"./Admin/admin_dash\";\r\nimport ClientDashboard from \"./client_dash\";\r\nimport RampInfoPage from \"./RampInfoPage\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass Dashboard extends React.Component {\r\n    \r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const name = this.props.username\r\n    console.log(name)\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    this.state = {\r\n      pageStack: [], // when we navigate to a \"sub-page\", push to stack. When we \"go back\", pop from stack\r\n      isLoaded: false, // \r\n      username:this.props.username,\r\n      error:null,\r\n      users:[]\r\n    }\r\n  }\r\n\r\n  pushToStack = (component) => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.push(component);\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  goBack = () => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.pop();\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  gotoFuncs = {\r\n    ramp_info: (isAdmin,data) => this.pushToStack(<RampInfoPage goBack = {this.goBack} data = {data} isAdmin={isAdmin} />)\r\n  }\r\n\r\n  componentWillMount()  {\r\n    fetch(\"/users\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.ok)\r\n        return res.json()\r\n      throw new Error(`Something went wrong with error code ${res.status}`)\r\n    })\r\n    .then(\r\n      (result) => {\r\n        var id \r\n\r\n        const users = result[\"results\"];\r\n        // users.map(x => {\r\n        //   if (x[\"username\"] == this.props.username){\r\n        //       id = x[\"pk\"]\r\n\r\n              \r\n        //   }\r\n        // })\r\n\r\n        this.setState({\r\n          isLoaded: true,\r\n          users:users\r\n        });\r\n      \r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n       \r\n      }\r\n    )\r\n\r\n  \r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n  render () {\r\n    if (!this.props.loggedIn) // user is not logged in.\r\n      return <Redirect to=\"/\" /> \r\n\r\n\r\n    \r\n    console.log(this.state)\r\n\r\n\r\n    \r\n    return (\r\n      <div>\r\n        <Navbar title={this.props.isAdmin ? \"Admin Dashboard\" : \"Client Dashboard\"} logout={this.props.logout} goBack={this.goBack} stackSize={this.state.pageStack.length}/>\r\n        <div className={\"content\"}>\r\n          {this.state.pageStack.length == 0 ? \r\n            this.props.isAdmin \r\n              ? <AdminDashboard users = {this.state.users} logout={this.props.logout} gotoFuncs={this.gotoFuncs} /> \r\n              : <ClientDashboard users = {this.state.users} l logout={this.props.logout}  gotoFuncs={this.gotoFuncs} /> :\r\n            this.state.pageStack[this.state.pageStack.length - 1]\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}