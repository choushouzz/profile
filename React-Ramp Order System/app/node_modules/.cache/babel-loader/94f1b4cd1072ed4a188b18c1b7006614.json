{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Select,MenuItem,TextField,InputLabel,Button}from\"@material-ui/core\";/**\r\n * Component to display general info about a ramp request\r\n *\r\n * @prop {boolean} isAdmin - When true, admin-specific functionality will appear\r\n**/var GeneralInfo=/*#__PURE__*/function(_React$Component){_inherits(GeneralInfo,_React$Component);var _super=_createSuper(GeneralInfo);function GeneralInfo(props){var _this;_classCallCheck(this,GeneralInfo);_this=_super.call(this,props);var data=props.data;_this.state={data:{// default data\n\"Ramp #\":{value:data[\"pk\"],options:[],clientEditable:false,// TODO: make editable\nadminEditable:false},\"Client Name\":{value:\"\".concat(data[\"first_name\"],\" \").concat(data[\"last_name\"]),options:[],clientEditable:false,adminEditable:false},\"Delivery Address\":{value:data[\"shipping_address\"],options:[],clientEditable:false,adminEditable:false},\"Billing Address\":{value:data[\"billing_address\"],options:[],clientEditable:false,adminEditable:false},// \"Liability Waiver\": { \n//   value: \"\",\n//   options: [\"Not Signed\", \"Signed\"],\n//   link: \"\", //exlusive to liability waiver\n//   clientEditable: false,\n//   adminEditable: false,\n// },\n\"Subsidy Info\":{value:data[\"subsidize\"]?\"Subsidized\":\"Not Subsidized\",options:[\"Subsidized\",\"Not Subsidized\"],clientEditable:false,adminEditable:false}}};return _this;}_createClass(GeneralInfo,[{key:\"render\",value:function render(){var _this2=this;var dataCopy=_objectSpread({},this.state.data);var dirtyBit=this.props.infoState.dirtyBit;return/*#__PURE__*/React.createElement(\"div\",{className:\"block \".concat(dirtyBit?\"unsaved\":\"\")},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"General Info\"),/*#__PURE__*/React.createElement(\"div\",{className:\"general-info-container\"},// This is where we populate the block with our data\nObject.entries(this.state.data).map(function(x,i){var key=x[0];var _x$=x[1],value=_x$.value,options=_x$.options,clientEditable=_x$.clientEditable,adminEditable=_x$.adminEditable;var editable=_this2.props.isAdmin&&adminEditable||!_this2.props.isAdmin&&clientEditable;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InputLabel,{id:\"geninfo-select-\".concat(i),shrink:true},\"\".concat(key).concat(!editable?\" (Read-Only)\":\"\")),options.length>0?/*#__PURE__*/React.createElement(Select,{className:\"general-info-input\",labelId:\"geninfo-select-\".concat(i),key:i,defaultValue:value,fullWidth:true,type:\"text\",variant:editable?\"outlined\":\"standard\",InputProps:{readOnly:!editable}},options.map(function(opt){return editable||opt==value?/*#__PURE__*/React.createElement(MenuItem,{value:opt},opt):null;})):/*#__PURE__*/React.createElement(TextField,{className:\"general-info-input\",labelId:\"geninfo-select-\".concat(i),key:i,defaultValue:value,fullWidth:true,type:\"text\",variant:editable?\"outlined\":\"standard\",InputProps:{readOnly:!editable}}));})));}}]);return GeneralInfo;}(React.Component);export default GeneralInfo;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/GeneralInfo.js"],"names":["React","Select","MenuItem","TextField","InputLabel","Button","GeneralInfo","props","data","state","value","options","clientEditable","adminEditable","dataCopy","dirtyBit","infoState","Object","entries","map","x","i","key","editable","isAdmin","length","readOnly","opt","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Select, MenuItem, TextField, InputLabel, Button} from \"@material-ui/core\";\r\n\r\n/**\r\n * Component to display general info about a ramp request\r\n *\r\n * @prop {boolean} isAdmin - When true, admin-specific functionality will appear\r\n**/\r\nclass GeneralInfo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {data} = props;\r\n    this.state = {\r\n      data: { // default data\r\n        \"Ramp #\": {\r\n          value: data[\"pk\"],\r\n          options: [],\r\n          clientEditable: false, // TODO: make editable\r\n          adminEditable: false,\r\n        },\r\n        \"Client Name\": {\r\n          value: `${data[\"first_name\"]} ${data[\"last_name\"]}`,\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        \"Delivery Address\": {\r\n          value: data[\"shipping_address\"],\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        \"Billing Address\": {\r\n          value: data[\"billing_address\"],\r\n          options: [],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n        // \"Liability Waiver\": { \r\n        //   value: \"\",\r\n        //   options: [\"Not Signed\", \"Signed\"],\r\n        //   link: \"\", //exlusive to liability waiver\r\n        //   clientEditable: false,\r\n        //   adminEditable: false,\r\n        // },\r\n        \"Subsidy Info\": {\r\n          value: data[\"subsidize\"] ? \"Subsidized\" : \"Not Subsidized\",\r\n          options: [\"Subsidized\", \"Not Subsidized\"],\r\n          clientEditable: false,\r\n          adminEditable: false,\r\n        },\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const dataCopy = {...this.state.data};\r\n    const {dirtyBit} = this.props.infoState;\r\n    \r\n    return (\r\n      <div className={`block ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          General Info\r\n        </h2>\r\n        <div className={\"general-info-container\"}>\r\n          { // This is where we populate the block with our data\r\n            Object.entries(this.state.data).map((x, i) => {\r\n              const key = x[0];\r\n              const {value, options, clientEditable, adminEditable} = x[1];\r\n              const editable = (this.props.isAdmin && adminEditable) || (!this.props.isAdmin && clientEditable)\r\n\r\n              return (\r\n                <div>\r\n                  <InputLabel id={`geninfo-select-${i}`} shrink>\r\n                    {`${key}${!editable ? \" (Read-Only)\" : \"\"}`}\r\n                  </InputLabel>\r\n                  {options.length > 0 ? \r\n                    (\r\n                        <Select\r\n                          className={\"general-info-input\"}\r\n                          labelId={`geninfo-select-${i}`}\r\n                          key={i}\r\n                          defaultValue={value}\r\n                          fullWidth\r\n                          type=\"text\"\r\n                          variant={editable ? \"outlined\" : \"standard\"}\r\n                          InputProps={{\r\n                            readOnly: !editable\r\n                          }}\r\n                        >\r\n                          {\r\n                            options.map(opt => (editable || opt == value) ? <MenuItem value={opt}>{opt}</MenuItem> : null)\r\n                          }\r\n                        </Select>\r\n                    ) : (\r\n                      <TextField\r\n                        className={\"general-info-input\"}\r\n                        labelId={`geninfo-select-${i}`}\r\n                        key={i}\r\n                        defaultValue={value}\r\n                        fullWidth\r\n                        type=\"text\"\r\n                        variant={editable ? \"outlined\" : \"standard\"}\r\n                        InputProps={{\r\n                          readOnly: !editable\r\n                        }}\r\n                      />\r\n                    )\r\n                  }\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {/* // TODO: add back in, im just tired right now. */}\r\n        {/* <Button fullWidth variant=\"contained\" color=\"primary\" >Save</Button> */}\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\n\r\nexport default GeneralInfo;"]},"metadata":{},"sourceType":"module"}