{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{TextField,Grid,Button}from\"@material-ui/core\";var Notes=/*#__PURE__*/function(_React$Component){_inherits(Notes,_React$Component);var _super=_createSuper(Notes);function Notes(props){var _this;_classCallCheck(this,Notes);_this=_super.call(this,props);_this.months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"December\"];_this.handleNewNoteInput=function(e){_this.setState({newNote:e.target.value});};_this.saveNote=function(e){e.preventDefault();var now=new Date();var date=\"\".concat(_this.months[now.getMonth()],\" \").concat(now.getDate(),\", \").concat(now.getFullYear());var newNote=_this.state.newNote;var newNotesArr=_toConsumableArray(_this.state.notes);newNotesArr.push({date:date,author:\"user\",// TODO: update\nnote:newNote});// Send post request\nfetch(\"/order-information/\".concat(_this.props.data['pk'],\"/\"),{method:'PATCH',headers:{'Accept':'application/json','Content-type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token-access'))},body:JSON.stringify({\"notes\":JSON.stringify(newNotesArr)})}).then(function(res){if(res.ok){return res.json();}throw new Error(\"Something went wrong with error code \".concat(res.status));}).then(function(res){_this.setState({newNote:\"\",notes:newNotesArr});},function(err){console.error(\"Unable to update note\");console.error(err);});};var notes;try{notes=JSON.parse(props.notes);}catch(_unused){notes=[];}_this.state={notes:notes,newNote:\"\"};return _this;}_createClass(Notes,[{key:\"generateNoteColor\",value:function generateNoteColor(author){// Color generated based on author\n// First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\nvar hash=0;var i,chr;for(i=0;i<author.length;i++){chr=author.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;}// Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\nvar c=(hash&0x00FFFFFF).toString(16).toUpperCase();var luminence=parseInt(c.slice(0,2),16)+parseInt(c.slice(2,4),16)+parseInt(c.slice(4,6),16);return{bg:\"#\"+\"00000\".substring(0,6-c.length)+c,text:luminence>=400?\"#000000\":\"#ffffff\"};}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"Notes\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,md:10},/*#__PURE__*/React.createElement(TextField,{value:this.state.newNote,onChange:this.handleNewNoteInput,fullWidth:true,variant:\"outlined\",label:\"Create a New Note\",type:\"text\",InputLabelProps:{shrink:true}})),/*#__PURE__*/React.createElement(Grid,{item:true,md:2},/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",disabled:this.state.newNote.length==0,onClick:this.saveNote},\"Save\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"notes-container\"},this.state.notes.map(function(note,i){return/*#__PURE__*/React.createElement(NoteBlock,{note:note,color:_this2.generateNoteColor(note.author),key:i});})));}}]);return Notes;}(React.Component);/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */function NoteBlock(props){var _props$note=props.note,title=_props$note.title,date=_props$note.date,author=_props$note.author,note=_props$note.note;return/*#__PURE__*/React.createElement(\"div\",{className:\"note-block\",style:{backgroundColor:props.color.bg}},/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-metadata\",style:{color:props.color.text}},/*#__PURE__*/React.createElement(\"span\",{className:\"note-block-date\"},date),\" by \",/*#__PURE__*/React.createElement(\"span\",{className:\"note-block-author\"},author)),/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-content\",style:{color:props.color.text}},note));}export default Notes;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/Notes.js"],"names":["React","TextField","Grid","Button","Notes","props","months","handleNewNoteInput","e","setState","newNote","target","value","saveNote","preventDefault","now","Date","date","getMonth","getDate","getFullYear","state","newNotesArr","notes","push","author","note","fetch","data","method","headers","localStorage","getItem","body","JSON","stringify","then","res","ok","json","Error","status","err","console","error","parse","hash","i","chr","length","charCodeAt","c","toString","toUpperCase","luminence","parseInt","slice","bg","substring","text","shrink","map","generateNoteColor","Component","NoteBlock","title","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\"\r\n\r\nclass Notes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    var notes;\r\n    try {\r\n      notes = JSON.parse(props.notes)\r\n    } catch {\r\n      notes = []\r\n    }\r\n    this.state = {\r\n      notes: notes,\r\n      newNote: \"\"\r\n    }\r\n  }\r\n\r\n  months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"December\"\r\n  ]\r\n\r\n  generateNoteColor(author) {\r\n    // Color generated based on author\r\n    // First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\r\n    let hash = 0;\r\n    let i, chr;\r\n    for (i = 0; i < author.length; i++){\r\n      chr = author.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + chr;\r\n      hash |= 0;\r\n    }\r\n\r\n    // Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\r\n    const c = (hash & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n    \r\n    const luminence = parseInt(c.slice(0, 2), 16) + parseInt(c.slice(2, 4), 16) + parseInt(c.slice(4, 6), 16)\r\n\r\n    return {\r\n      bg: \"#\" + \"00000\".substring(0, 6 - c.length) + c,\r\n      text: luminence >= 400 ? \"#000000\" : \"#ffffff\"\r\n    };\r\n  }\r\n\r\n  handleNewNoteInput = e => {\r\n    this.setState({\r\n      newNote: e.target.value\r\n    });\r\n  }\r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n    const now = new Date();\r\n    const date = `${this.months[now.getMonth()]} ${now.getDate()}, ${now.getFullYear()}`\r\n    const {newNote} = this.state;\r\n    const newNotesArr = [...this.state.notes];\r\n    newNotesArr.push({\r\n      date: date,\r\n      author: \"user\", // TODO: update\r\n      note: newNote\r\n    }); // Send post request\r\n\r\n    fetch(`/order-information/${this.props.data['pk']}/`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n      },\r\n      body: JSON.stringify({\r\n        \"notes\": JSON.stringify(newNotesArr)\r\n      })\r\n    }).then(res => {\r\n      if (res.ok){\r\n        return res.json()\r\n      }\r\n      throw new Error(`Something went wrong with error code ${res.status}`)\r\n    })\r\n    .then(res => {\r\n      this.setState({\r\n        newNote: \"\",\r\n        notes: newNotesArr\r\n      });\r\n    }, err => {\r\n      console.error(\"Unable to update note\");\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"block\"}>\r\n        <h2 className={\"block-title\"}>\r\n          Notes\r\n        </h2>\r\n        \r\n        <Grid container>\r\n          <Grid item md={10}>\r\n            <TextField\r\n              value={this.state.newNote}\r\n              onChange={this.handleNewNoteInput}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Create a New Note\"\r\n              type=\"text\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" disabled={this.state.newNote.length == 0} onClick={this.saveNote}>\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div className={\"notes-container\"}>\r\n          {this.state.notes.map((note, i) => <NoteBlock note={note} color={this.generateNoteColor(note.author)} key={i} />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */\r\nfunction NoteBlock(props) {\r\n\r\n\r\n  const {title, date, author, note} = props.note;\r\n  return (\r\n    <div className=\"note-block\" style={{backgroundColor: props.color.bg}}>\r\n      <p className=\"note-block-metadata\" style={{color: props.color.text}}>\r\n        <span className=\"note-block-date\">\r\n          {date}\r\n        </span>\r\n        {\" by \"}\r\n        <span className=\"note-block-author\">\r\n          {author}\r\n        </span>\r\n      </p>\r\n      <p className=\"note-block-content\" style={{color: props.color.text}}> \r\n        {note}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}