{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{TextField,Grid,Button}from\"@material-ui/core\";var Notes=/*#__PURE__*/function(_React$Component){_inherits(Notes,_React$Component);var _super=_createSuper(Notes);function Notes(props){var _this;_classCallCheck(this,Notes);_this=_super.call(this,props);_this.saveNote=function(e){e.preventDefault();// Send post request\n// fetch(`/order-information/${this.props.data['pk']}/`, {\n//   method: 'PATCH',\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.getItem('token-access')}`\n//   },\n//   body: JSON.stringify({\n//     \"notes\": JSON.stringify(newNotesArr)\n//   })\n// }).then(res => {\n//   if (res.ok){\n//     return res.json()\n//   }\n//   throw new Error(`Something went wrong with error code ${res.status}`)\n// })\n// .then(res => {\n//   this.setState({\n//     newNote: \"\",\n//     notes: newNotesArr\n//   });\n// }, err => {\n//   console.error(\"Unable to update note\");\n//   console.error(err);\n// })\n};var notes;try{notes=JSON.parse(props.notes);}catch(_unused){notes=[];}_this.state={notes:notes,newNote:\"\"};return _this;}_createClass(Notes,[{key:\"generateNoteColor\",value:function generateNoteColor(author){// Color generated based on author\n// First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\nvar hash=0;var i,chr;for(i=0;i<author.length;i++){chr=author.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;}// Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\nvar c=(hash&0x00FFFFFF).toString(16).toUpperCase();var luminence=parseInt(c.slice(0,2),16)+parseInt(c.slice(2,4),16)+parseInt(c.slice(4,6),16);return{bg:\"#\"+\"00000\".substring(0,6-c.length)+c,text:luminence>=400?\"#000000\":\"#ffffff\"};}},{key:\"render\",value:function render(){var _this2=this;var _this$props$noteState=this.props.noteState,newNote=_this$props$noteState.newNote,notes=_this$props$noteState.notes,dirtyBit=_this$props$noteState.dirtyBit;return/*#__PURE__*/React.createElement(\"div\",{className:\"block fullwidth \".concat(dirtyBit?\"unsaved\":\"\")},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"Notes\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,md:9},/*#__PURE__*/React.createElement(TextField,{value:newNote,onChange:this.props.handleNewNoteInput,fullWidth:true,variant:\"outlined\",label:\"Create a New Note\",type:\"text\",InputLabelProps:{shrink:true}})),/*#__PURE__*/React.createElement(Grid,{item:true,md:3,className:\"horz-padding\"},/*#__PURE__*/React.createElement(Button,{className:\"create-bttn\",fullWidth:true,variant:\"contained\",color:\"primary\",disabled:newNote.length==0,onClick:this.props.saveNote},\"Create Note\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"notes-container\"},notes.map(function(note,i){return/*#__PURE__*/React.createElement(NoteBlock,{note:note,color:_this2.generateNoteColor(note.author),key:i});})));}}]);return Notes;}(React.Component);/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */function NoteBlock(props){var _props$note=props.note,dirtyBit=_props$note.dirtyBit,date=_props$note.date,author=_props$note.author,note=_props$note.note;return/*#__PURE__*/React.createElement(\"div\",{className:\"note-block \".concat(dirtyBit?\"unsaved\":\"\"),style:{backgroundColor:props.color.bg}},/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-metadata\",style:{color:props.color.text}},/*#__PURE__*/React.createElement(\"span\",{className:\"note-block-date\"},date),\" by \",/*#__PURE__*/React.createElement(\"span\",{className:\"note-block-author\"},author,dirtyBit&&/*#__PURE__*/React.createElement(\"strong\",null,\"*\"))),/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-content\",style:{color:props.color.text}},note));}export default Notes;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/Notes.js"],"names":["React","TextField","Grid","Button","Notes","props","saveNote","e","preventDefault","notes","JSON","parse","state","newNote","author","hash","i","chr","length","charCodeAt","c","toString","toUpperCase","luminence","parseInt","slice","bg","substring","text","noteState","dirtyBit","handleNewNoteInput","shrink","map","note","generateNoteColor","Component","NoteBlock","date","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\"\r\n\r\nclass Notes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    var notes;\r\n    try {\r\n      notes = JSON.parse(props.notes)\r\n    } catch {\r\n      notes = []\r\n    }\r\n    this.state = {\r\n      notes: notes,\r\n      newNote: \"\"\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  generateNoteColor(author) {\r\n    // Color generated based on author\r\n    // First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\r\n    let hash = 0;\r\n    let i, chr;\r\n    for (i = 0; i < author.length; i++){\r\n      chr = author.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + chr;\r\n      hash |= 0;\r\n    }\r\n\r\n    // Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\r\n    const c = (hash & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n    \r\n    const luminence = parseInt(c.slice(0, 2), 16) + parseInt(c.slice(2, 4), 16) + parseInt(c.slice(4, 6), 16)\r\n\r\n    return {\r\n      bg: \"#\" + \"00000\".substring(0, 6 - c.length) + c,\r\n      text: luminence >= 400 ? \"#000000\" : \"#ffffff\"\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n     // Send post request\r\n\r\n    // fetch(`/order-information/${this.props.data['pk']}/`, {\r\n    //   method: 'PATCH',\r\n    //   headers: {\r\n    //     'Accept': 'application/json',\r\n    //     'Content-type': 'application/json',\r\n    //     'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     \"notes\": JSON.stringify(newNotesArr)\r\n    //   })\r\n    // }).then(res => {\r\n    //   if (res.ok){\r\n    //     return res.json()\r\n    //   }\r\n    //   throw new Error(`Something went wrong with error code ${res.status}`)\r\n    // })\r\n    // .then(res => {\r\n    //   this.setState({\r\n    //     newNote: \"\",\r\n    //     notes: newNotesArr\r\n    //   });\r\n    // }, err => {\r\n    //   console.error(\"Unable to update note\");\r\n    //   console.error(err);\r\n    // })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {newNote, notes, dirtyBit} = this.props.noteState\r\n\r\n    return (\r\n      <div className={`block fullwidth ${dirtyBit ? \"unsaved\" : \"\"}`}>\r\n        <h2 className={\"block-title\"}>\r\n          Notes\r\n        </h2>\r\n        \r\n        <Grid container>\r\n          <Grid item md={9}>\r\n            <TextField\r\n              value={newNote}\r\n              onChange={this.props.handleNewNoteInput}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Create a New Note\"\r\n              type=\"text\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={3} className={\"horz-padding\"}>\r\n            <Button className={\"create-bttn\"} fullWidth variant=\"contained\" color=\"primary\" disabled={newNote.length == 0} onClick={this.props.saveNote}>\r\n              Create Note\r\n            </Button> \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div className={\"notes-container\"}>\r\n          {notes.map((note, i) => <NoteBlock note={note} color={this.generateNoteColor(note.author)} key={i} />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */\r\nfunction NoteBlock(props) {\r\n  const {dirtyBit, date, author, note} = props.note;\r\n  return (\r\n    <div className={`note-block ${dirtyBit ? \"unsaved\" : \"\"}`} style={{backgroundColor: props.color.bg}}>\r\n      \r\n      <p className=\"note-block-metadata\" style={{color: props.color.text}}>\r\n        <span className=\"note-block-date\">\r\n          {date}\r\n        </span>\r\n        {\" by \"}\r\n        <span className=\"note-block-author\">\r\n          {author}{dirtyBit && <strong>*</strong>}\r\n        </span>\r\n      </p>\r\n      <p className=\"note-block-content\" style={{color: props.color.text}}> \r\n        {note}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}