{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import ProgressBar from\"../ProgressBar\";import Button from\"@material-ui/core/Button\";import Grid from\"@material-ui/core/Grid\";import{Select,MenuItem,InputLabel}from\"@material-ui/core\";import{sizing}from'@material-ui/system';var StatusBlock=/*#__PURE__*/function(_React$Component){_inherits(StatusBlock,_React$Component);var _super=_createSuper(StatusBlock);function StatusBlock(props){var _this;_classCallCheck(this,StatusBlock);_this=_super.call(this,props);_this.handleStatusInput=function(e){_this.setState({statusInput:_this.statuses.indexOf(e.target.value)});};_this.saveData=function(e){e.preventDefault();// TODO: make post request\nvar status=_this.state.statusInput;_this.setState({status:status});_this.handle();};_this.statuses=[\"Request Recieved\",\"Request Accepted\",\"Build Phase\",\"Paint Phase\",\"Out for Delivery\",\"Completed\"];_this.statuses[-1]=\"--\";_this.state={data:_this.props.data,error:null,isLoaded:false,date:\"\",statusInput:0,status:-1// progress: (0 / (this.statuses.length - 1)) * 100,\n};return _this;}_createClass(StatusBlock,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$setState;var new_progress=\"status\"in this.props.data?this.statuses.indexOf(this.props.data[\"status\"]):-1;if(new_progress>=this.statuses.length||new_progress<-1){new_progress=-1;}this.setState((_this$setState={status:this.state.data[\"status\"],date:this.state.data[\"date_created\"],isLoaded:true},_defineProperty(_this$setState,\"status\",new_progress),_defineProperty(_this$setState,\"statusInput\",new_progress),_this$setState));}},{key:\"handle\",value:function handle(){var _this2=this;var data=this.props.data;console.log(data);var token=localStorage.getItem('token-access');var requestOptions={method:'PUT',headers:{'Content-Type':'application/json','Authorization':'Bearer '+token},body:JSON.stringify(data)};fetch('/order-information/'+data[\"pk\"],requestOptions).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var data,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return response.json();case 2:data=_context.sent;if(response.ok){_context.next=6;break;}// get error message from body or default to response status\nerror=data&&data.message||response.status;return _context.abrupt(\"return\",Promise.reject(error));case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(error){_this2.setState({errorMessage:error});console.error('There was an error!',error);});}},{key:\"render\",value:function render(){var _this$state=this.state,status=_this$state.status,statusInput=_this$state.statusInput,date=_this$state.date,error=_this$state.error,isLoaded=_this$state.isLoaded;var statusMsg=this.statuses[statusInput];var progress=statusInput/(this.statuses.length-1);if(error){return/*#__PURE__*/React.createElement(\"div\",null,\" Error: \",error.message);}else if(!isLoaded){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}else{var dirtyBit=statusInput!=status;return/*#__PURE__*/React.createElement(\"div\",{className:\"block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"Status\"),/*#__PURE__*/React.createElement(\"span\",{className:\"status-block-last-updated\"},\"Initial Request Date: \",/*#__PURE__*/React.createElement(\"strong\",null,date)),/*#__PURE__*/React.createElement(ProgressBar,{progress:progress}),/*#__PURE__*/React.createElement(\"span\",{className:\"status-block-status\"},statusMsg,/*#__PURE__*/React.createElement(\"br\",null)),this.props.isAdmin&&/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,md:10},/*#__PURE__*/React.createElement(Select,{className:\"status-bar-textfield\",value:statusMsg,onChange:this.handleStatusInput,type:\"number\",variant:\"outlined\"},this.statuses.map(function(status,i){return/*#__PURE__*/React.createElement(MenuItem,{value:status,key:i},status);}))),/*#__PURE__*/React.createElement(Grid,{item:true,md:2},/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",disabled:!dirtyBit,onClick:this.saveData},\"Save\"))));}}}]);return StatusBlock;}(React.Component);export default StatusBlock;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/StatusBlock.js"],"names":["React","ProgressBar","Button","Grid","Select","MenuItem","InputLabel","sizing","StatusBlock","props","handleStatusInput","e","setState","statusInput","statuses","indexOf","target","value","saveData","preventDefault","status","state","handle","data","error","isLoaded","date","new_progress","length","console","log","token","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","ok","message","Promise","reject","catch","errorMessage","statusMsg","progress","dirtyBit","isAdmin","map","i","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ProgressBar from \"../ProgressBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Select, MenuItem, InputLabel} from \"@material-ui/core\";\r\nimport { sizing } from '@material-ui/system';\r\n\r\nclass StatusBlock extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.statuses = [\r\n      \"Request Recieved\",\r\n      \"Request Accepted\",\r\n      \"Build Phase\",\r\n      \"Paint Phase\",\r\n      \"Out for Delivery\",\r\n      \"Completed\"\r\n    ];\r\n    this.statuses[-1] = \"--\"\r\n\r\n    this.state = {\r\n      data:this.props.data,\r\n      error: null,\r\n      isLoaded: false,\r\n      date:\"\",\r\n      statusInput: 0,\r\n      status: -1\r\n      // progress: (0 / (this.statuses.length - 1)) * 100,\r\n    };\r\n  }  \r\n\r\n\r\n\r\n\r\n  handleStatusInput = e => {\r\n    this.setState({\r\n      statusInput: this.statuses.indexOf(e.target.value)\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let new_progress = \"status\" in this.props.data ? this.statuses.indexOf(this.props.data[\"status\"]) : -1\r\n    if (new_progress >= this.statuses.length || new_progress < -1){\r\n      new_progress = -1;\r\n    }\r\n    this.setState({\r\n      status: this.state.data[\"status\"],\r\n      date: this.state.data[\"date_created\"],\r\n      isLoaded: true,\r\n      status: new_progress,\r\n      statusInput: new_progress\r\n    });\r\n  }\r\n\r\n  handle(){\r\n    const data = this.props.data\r\n    console.log(data)\r\n\t\tconst token = localStorage.getItem('token-access')\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + token\r\n\t\t\t},\r\n            body: JSON.stringify(data)\r\n        };\r\n        fetch('/order-information/' + data[\"pk\"], requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\t\t\t\t        //  console.log(data.pk)\r\n                // this.setState({ postId: data.pk })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error });\r\n                console.error('There was an error!', error);\r\n            }); \r\n\r\n  }\r\n\r\n  saveData = e => {\r\n    e.preventDefault();\r\n    // TODO: make post request\r\n    const status = this.state.statusInput;\r\n    this.setState({\r\n      status\r\n    })\r\n    this.handle()\r\n  }\r\n\r\n  render() {\r\n    const { status, statusInput, date, error, isLoaded } = this.state;\r\n    const statusMsg = this.statuses[statusInput];\r\n    const progress = (statusInput / (this.statuses.length - 1));\r\n    if (error) {\r\n      return <div> Error: {error.message}</div>\r\n    }\r\n    else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    }\r\n    else{\r\n\r\n    const dirtyBit = statusInput != status;\r\n\r\n    return (\r\n      <div className={\"block\"}>\r\n        <h2 className={\"block-title\"}>\r\n          Status\r\n        </h2>\r\n        <span className={\"status-block-last-updated\"}>\r\n          Initial Request Date: <strong>\r\n            {date}\r\n          </strong>\r\n        </span>\r\n        <ProgressBar progress={progress} />\r\n        <span className={\"status-block-status\"} > \r\n          {statusMsg}\r\n          <br/>\r\n        </span>\r\n        { this.props.isAdmin &&\r\n          <Grid container>\r\n            <Grid item md={10}>\r\n              <Select\r\n                className = {\"status-bar-textfield\"}\r\n                value={statusMsg}\r\n                onChange={this.handleStatusInput}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n              >\r\n                {this.statuses.map((status, i) => <MenuItem value={status} key={i}>{status}</MenuItem>)}\r\n                \r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" disabled={!dirtyBit} onClick={this.saveData}>Save</Button>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default StatusBlock;"]},"metadata":{},"sourceType":"module"}