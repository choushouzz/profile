{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Redirect}from\"react-router-dom\";import\"./styles.css\";import Navbar from\"../Navbar\";import AdminDashboard from\"./Admin/admin_dash\";import ClientDashboard from\"./client_dash\";import RampInfoPage from\"./RampInfoPage\";/* Primary Component for the Admin Dashboard page */var Dashboard=/*#__PURE__*/function(_React$Component){_inherits(Dashboard,_React$Component);var _super=_createSuper(Dashboard);function Dashboard(props){var _this;_classCallCheck(this,Dashboard);_this=_super.call(this,props);_this.pushToStack=function(component){var newStack=_toConsumableArray(_this.state.pageStack);newStack.push(component);_this.setState({pageStack:newStack});};_this.goBack=function(){var newStack=_toConsumableArray(_this.state.pageStack);newStack.pop();_this.setState({pageStack:newStack});};_this.gotoFuncs={ramp_info:function ramp_info(isAdmin,data){return _this.pushToStack(/*#__PURE__*/React.createElement(RampInfoPage,{goBack:_this.goBack,data:data,isAdmin:isAdmin}));}};_this.state={pageStack:[],// when we navigate to a \"sub-page\", push to stack. When we \"go back\", pop from stack\nisLoaded:false,// \norders:[],// list of all orders TODO: don't load ALL orders here, since then clients can view it via dev tools\nuser:-1};return _this;}_createClass(Dashboard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"/users\",{method:'GET',headers:{'Accept':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token-access'))}}).then(function(res){if(res.ok)return res.json();throw new Error(\"Something went wrong with error code \".concat(res.status));}).then(function(result){var users=result[\"results\"];console.log(users);var id;users.map(function(x){if(x[\"username\"]==_this2.props.username){id=x[\"pk\"];}});console.log(id);_this2.setState({isLoaded:true,user:id});},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){_this2.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){if(!this.props.loggedIn)// user is not logged in.\nreturn/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navbar,{title:this.props.isAdmin?\"Admin Dashboard\":\"Client Dashboard\",logout:this.props.logout,goBack:this.goBack,stackSize:this.state.pageStack.length}),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},this.state.pageStack.length==0?this.props.isAdmin?/*#__PURE__*/React.createElement(AdminDashboard,{user:this.state.user,logout:this.props.logout,gotoFuncs:this.gotoFuncs}):/*#__PURE__*/React.createElement(ClientDashboard,{user:this.state.user,l:true,logout:this.props.logout,gotoFuncs:this.gotoFuncs}):this.state.pageStack[this.state.pageStack.length-1]));}}]);return Dashboard;}(React.Component);export default Dashboard;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/index.js"],"names":["React","Redirect","Navbar","AdminDashboard","ClientDashboard","RampInfoPage","Dashboard","props","pushToStack","component","newStack","state","pageStack","push","setState","goBack","pop","gotoFuncs","ramp_info","isAdmin","data","isLoaded","orders","user","fetch","method","headers","localStorage","getItem","then","res","ok","json","Error","status","result","users","console","log","id","map","x","username","error","loggedIn","logout","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Navbar from \"../Navbar\";\r\nimport AdminDashboard from \"./Admin/admin_dash\";\r\nimport ClientDashboard from \"./client_dash\";\r\nimport RampInfoPage from \"./RampInfoPage\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageStack: [], // when we navigate to a \"sub-page\", push to stack. When we \"go back\", pop from stack\r\n      isLoaded: false, // \r\n      orders: [], // list of all orders TODO: don't load ALL orders here, since then clients can view it via dev tools\r\n      user:-1\r\n    }\r\n  }\r\n\r\n  pushToStack = (component) => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.push(component);\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  goBack = () => {\r\n    const newStack = [... this.state.pageStack];\r\n    newStack.pop();\r\n    this.setState({\r\n      pageStack: newStack\r\n    });\r\n  }\r\n\r\n  gotoFuncs = {\r\n    ramp_info: (isAdmin,data) => this.pushToStack(<RampInfoPage goBack = {this.goBack} data = {data} isAdmin={isAdmin} />)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n\r\n    fetch(\"/users\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.ok)\r\n        return res.json()\r\n      throw new Error(`Something went wrong with error code ${res.status}`)\r\n    })\r\n    .then(\r\n      (result) => {\r\n\r\n        const users = result[\"results\"];\r\n        console.log(users)\r\n        var id\r\n        users.map(x => {\r\n          if (x[\"username\"] == this.props.username){\r\n              id = x[\"pk\"]\r\n          }\r\n        })\r\n        console.log(id)\r\n\r\n        this.setState({\r\n          isLoaded: true,\r\n          user:id\r\n        });\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n  render () {\r\n    if (!this.props.loggedIn) // user is not logged in.\r\n      return <Redirect to=\"/\" /> \r\n\r\n    \r\n    return (\r\n      <div>\r\n        <Navbar title={this.props.isAdmin ? \"Admin Dashboard\" : \"Client Dashboard\"} logout={this.props.logout} goBack={this.goBack} stackSize={this.state.pageStack.length}/>\r\n        <div className={\"content\"}>\r\n          {this.state.pageStack.length == 0 ? \r\n            this.props.isAdmin \r\n              ? <AdminDashboard user = {this.state.user} logout={this.props.logout} gotoFuncs={this.gotoFuncs} /> \r\n              : <ClientDashboard user=  {this.state.user} l logout={this.props.logout}  gotoFuncs={this.gotoFuncs} /> :\r\n            this.state.pageStack[this.state.pageStack.length - 1]\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}