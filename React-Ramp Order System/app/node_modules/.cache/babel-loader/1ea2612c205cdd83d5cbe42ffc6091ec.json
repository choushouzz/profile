{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{TextField,Grid,Button}from\"@material-ui/core\";var Notes=/*#__PURE__*/function(_React$Component){_inherits(Notes,_React$Component);var _super=_createSuper(Notes);function Notes(props){var _this;_classCallCheck(this,Notes);_this=_super.call(this,props);_this.months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"December\"];_this.handleNewNoteInput=function(e){_this.setState({newNote:e.target.value});};_this.saveNote=function(e){e.preventDefault();var now=new Date();var date=\"\".concat(_this.months[now.getMonth()],\" \").concat(now.getDate(),\", \").concat(now.getFullYear());var newNote=_this.state.newNote;_this.setState({Note:_this.state.newNote,date:new Date()});// const newNotesArr = [...this.state.notes];\n// newNotesArr.push({\n//   date: date,\n//   author: \"user\", // TODO: update\n//   note: newNote\n// }); // Send post request\n// fetch(`/order-information/${this.props.data['pk']}/`, {\n//   method: 'PATCH',\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.getItem('token-access')}`\n//   },\n//   body: JSON.stringify({\n//     \"notes\": JSON.stringify(newNotesArr)\n//   })\n// }).then(res => {\n//   if (res.ok){\n//     return res.json()\n//   }\n//   throw new Error(`Something went wrong with error code ${res.status}`)\n// })\n// .then(res => {\n//   this.setState({\n//     newNote: \"\",\n//     notes: newNotesArr\n//   });\n// }, err => {\n//   console.error(\"Unable to update note\");\n//   console.error(err);\n// })\n};var Note=props.data[\"notes\"];_this.state={newNote:\"\",Note:Note,date:\"\"};return _this;}_createClass(Notes,[{key:\"generateNoteColor\",value:function generateNoteColor(){// Color generated based on author\n// First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\nvar hash=0;var i,chr;// for (i = 0; i < author.length; i++){\n//   chr = author.charCodeAt(i);\n//   hash = ((hash << 5) - hash) + chr;\n//   hash |= 0;\n// }\n// Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\nvar c=(hash&0x00FFFFFF).toString(16).toUpperCase();var luminence=parseInt(c.slice(0,2),16)+parseInt(c.slice(2,4),16)+parseInt(c.slice(4,6),16);return{bg:\"#\"+\"00000\".substring(0,6-c.length)+c,text:luminence>=400?\"#000000\":\"#ffffff\"};}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"Notes\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,md:10},/*#__PURE__*/React.createElement(TextField,{value:this.state.newNote,onChange:this.handleNewNoteInput,fullWidth:true,variant:\"outlined\",label:\"Create a New Note\",type:\"text\",InputLabelProps:{shrink:true}})),/*#__PURE__*/React.createElement(Grid,{item:true,md:2},/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",disabled:this.state.newNote.length==0,onClick:this.saveNote},\"Save Note\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"notes-container\"},/*#__PURE__*/React.createElement(NoteBlock,{date:this.state.date,note:this.state.Note,color:this.generateNoteColor()})));}}]);return Notes;}(React.Component);/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */function NoteBlock(props){var note=props.note;var date=props.date;return/*#__PURE__*/React.createElement(\"div\",{className:\"note-block\",style:{backgroundColor:props.color.bg}},/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-metadata\",style:{color:props.color.text}},/*#__PURE__*/React.createElement(\"span\",{className:\"note-block-date\"},date)),/*#__PURE__*/React.createElement(\"p\",{className:\"note-block-content\",style:{color:props.color.text}},note));}export default Notes;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/Notes.js"],"names":["React","TextField","Grid","Button","Notes","props","months","handleNewNoteInput","e","setState","newNote","target","value","saveNote","preventDefault","now","Date","date","getMonth","getDate","getFullYear","state","Note","data","hash","i","chr","c","toString","toUpperCase","luminence","parseInt","slice","bg","substring","length","text","shrink","generateNoteColor","Component","NoteBlock","note","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\"\r\n\r\nclass Notes extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    const Note = props.data[\"notes\"]\r\n    this.state = {\r\n      newNote: \"\",\r\n      Note:Note,\r\n      date:\"\"\r\n    }\r\n  }\r\n\r\n  months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"December\"\r\n  ]\r\n\r\n  generateNoteColor() {\r\n    // Color generated based on author\r\n    // First, hash the author (https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\r\n    let hash = 0;\r\n    let i, chr;\r\n    // for (i = 0; i < author.length; i++){\r\n    //   chr = author.charCodeAt(i);\r\n    //   hash = ((hash << 5) - hash) + chr;\r\n    //   hash |= 0;\r\n    // }\r\n\r\n    // Then, use hash to generate color (https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript)\r\n    const c = (hash & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n    \r\n    const luminence = parseInt(c.slice(0, 2), 16) + parseInt(c.slice(2, 4), 16) + parseInt(c.slice(4, 6), 16)\r\n\r\n    return {\r\n      bg: \"#\" + \"00000\".substring(0, 6 - c.length) + c,\r\n      text: luminence >= 400 ? \"#000000\" : \"#ffffff\"\r\n    };\r\n  }\r\n\r\n  handleNewNoteInput = e => {\r\n    this.setState({\r\n      newNote: e.target.value\r\n    });\r\n  }\r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n    const now = new Date();\r\n    const date = `${this.months[now.getMonth()]} ${now.getDate()}, ${now.getFullYear()}`\r\n    const newNote = this.state.newNote;\r\n    this.setState({\r\n      Note: this.state.newNote,\r\n      date:new Date()\r\n    });\r\n    // const newNotesArr = [...this.state.notes];\r\n    // newNotesArr.push({\r\n    //   date: date,\r\n    //   author: \"user\", // TODO: update\r\n    //   note: newNote\r\n    // }); // Send post request\r\n\r\n    // fetch(`/order-information/${this.props.data['pk']}/`, {\r\n    //   method: 'PATCH',\r\n    //   headers: {\r\n    //     'Accept': 'application/json',\r\n    //     'Content-type': 'application/json',\r\n    //     'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     \"notes\": JSON.stringify(newNotesArr)\r\n    //   })\r\n    // }).then(res => {\r\n    //   if (res.ok){\r\n    //     return res.json()\r\n    //   }\r\n    //   throw new Error(`Something went wrong with error code ${res.status}`)\r\n    // })\r\n    // .then(res => {\r\n    //   this.setState({\r\n    //     newNote: \"\",\r\n    //     notes: newNotesArr\r\n    //   });\r\n    // }, err => {\r\n    //   console.error(\"Unable to update note\");\r\n    //   console.error(err);\r\n    // })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"block\"}>\r\n        <h2 className={\"block-title\"}>\r\n          Notes\r\n        </h2>\r\n        \r\n        <Grid container>\r\n          <Grid item md={10}>\r\n            <TextField\r\n              value={this.state.newNote}\r\n              onChange={this.handleNewNoteInput}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Create a New Note\"\r\n              type=\"text\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" disabled={this.state.newNote.length == 0} onClick={this.saveNote}>\r\n              Save Note\r\n            </Button>\r\n          </Grid> \r\n        </Grid>\r\n\r\n        <div className={\"notes-container\"}>\r\n          <NoteBlock date = {this.state.date} note={this.state.Note} color={this.generateNoteColor()} >\r\n           </NoteBlock>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Component to display a single note.\r\n * \r\n * @prop {object} note - The title, date, author, and note of the given note\r\n * @prop {string} color - hexadecimal color code for note \r\n */\r\nfunction NoteBlock(props) {\r\n\r\n\r\n  const note = props.note;\r\n  const date = props.date;\r\n  return (\r\n    <div className=\"note-block\" style={{backgroundColor: props.color.bg}}>\r\n      <p className=\"note-block-metadata\" style={{color: props.color.text}}>\r\n        <span className=\"note-block-date\">\r\n          {date}\r\n        </span>\r\n        {/* {\" by \"} */}\r\n        {/* <span className=\"note-block-author\">\r\n          {author}\r\n        </span> */}\r\n      </p>\r\n      <p className=\"note-block-content\" style={{color: props.color.text}}> \r\n        {note}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}