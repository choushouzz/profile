{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Button,Grid}from'@material-ui/core';import RampDimensions from\"./RampDimensions\";import StatusBlock from\"./StatusBlock\";import Notes from\"./Notes\";import GeneralInfo from\"./GeneralInfo\";import PhotoGallery from\"./PhotoGallery\";import\"../Admin/admin_styles.css\";/* Primary Component for the Admin Dashboard page */var RampInfoPage=/*#__PURE__*/function(_React$Component){_inherits(RampInfoPage,_React$Component);var _super=_createSuper(RampInfoPage);function RampInfoPage(props){var _this;_classCallCheck(this,RampInfoPage);_this=_super.call(this,props);// let new_progress = \"status\" in props.data ? this.statuses.indexOf(props.data[\"status\"]) : -1\n// if (new_progress >= this.statuses.length || new_progress < -1){\n//   new_progress = -1;\n// }\n_this.overallDirtyBit=function(){var states=[_this.state.noteState,_this.state.statusState,_this.state.infoState];return states.some(function(x){return x.dirtyBit;});};_this.saveChanges=function(e){e.preventDefault();var newOrder={};Object.assign(newOrder,_this.props.data);if(_this.state.noteState.dirtyBit){var serializedNotes=_this.state.noteState.notes.map(function(note){return{date:note.date,author:note.author,note:note.note};});newOrder[\"notes\"]=JSON.stringify(serializedNotes);}if(_this.state.statusState.dirtyBit){newOrder[\"status\"]=JSON.stringify(_this.state.statusState.statusInput);}// TODO: general info\nfetch(\"/order-information/\".concat(newOrder[\"pk\"],\"/\"),{method:'PATCH',headers:{'Content-Type':'application/json','Accept':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token-access'))},body:JSON.stringify(newOrder)}).then(function(res){res.json();}).then(function(res){console.log(res);// TODO: update dirty bits\nvar noteStateCopy={};Object.assign(noteStateCopy,_this.state.noteState);noteStateCopy.dirtyBit=false;var statusStateCopy={};Object.assign(statusStateCopy,_this.state.statusState);statusStateCopy.dirtyBit=false;var infoStateCopy={};Object.assign(infoStateCopy,_this.state.infoState);infoStateCopy.dirtyBit=false;_this.setState({noteState:noteStateCopy,statusState:statusStateCopy,infoState:infoStateCopy});}).catch(function(err){console.error(\"there was an error with saving changes!\",err);});};_this.handleNewNoteInput=function(e){e.preventDefault();// make a copy of the note state, and then update the newNote property\nvar noteStateCopy={};Object.assign(noteStateCopy,_this.state.noteState);noteStateCopy.newNote=e.target.value;// Save the note state\n_this.setState({noteState:noteStateCopy});};_this.saveNote=function(e){e.preventDefault();var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"December\"];var now=new Date();var date=\"\".concat(months[now.getMonth()],\" \").concat(now.getDate(),\", \").concat(now.getFullYear());var note=_this.state.noteState.newNote;var noteStateCopy={};Object.assign(noteStateCopy,_this.state.noteState);noteStateCopy.newNote=\"\";noteStateCopy.notes.push({date:date,author:localStorage.getItem(\"username\"),// TODO: update\nnote:note,dirtyBit:true});noteStateCopy.dirtyBit=true;_this.setState({noteState:noteStateCopy});};_this.handleStatusInput=function(status){var statusStateCopy={};Object.assign(statusStateCopy,_this.state.statusState);statusStateCopy.statusInput=status;statusStateCopy.dirtyBit=statusStateCopy.statusInput!=statusStateCopy.oldStatus;// Remains as such until the entire dash's changes are saved.\n_this.setState({statusState:statusStateCopy});};_this.state={noteState:{newNote:\"\",notes:JSON.parse(props.data[\"notes\"]).map(function(x){return _objectSpread({},x,{dirtyBit:false});}),dirtyBit:false},statusState:{statusInput:parseInt(props.data[\"status\"]),// This is what will be posted when \"save changes\" is pressed.\noldStatus:parseInt(props.data[\"status\"]),dirtyBit:false},infoState:{dirtyBit:false},galleryState:{dirtyBit:false,leftSrc:props.data[\"step_left_photo\"],entrySrc:props.data[\"entryway_photo\"],rightSrc:props.data[\"step_right_photo\"]}};return _this;}_createClass(RampInfoPage,[{key:\"render\",value:function render(){var _this$props=this.props,data=_this$props.data,isAdmin=_this$props.isAdmin;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4},/*#__PURE__*/React.createElement(GeneralInfo,{isAdmin:isAdmin,data:data,infoState:this.state.infoState})),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:8},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(RampDimensions,{data:data,isAdmin:isAdmin})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(StatusBlock,{isAdmin:isAdmin,statusState:this.state.statusState,date:data[\"date_created\"],handleStatusInput:this.handleStatusInput}))),isAdmin&&/*#__PURE__*/React.createElement(Notes,{noteState:this.state.noteState,saveNote:this.saveNote,handleNewNoteInput:this.handleNewNoteInput}))),/*#__PURE__*/React.createElement(PhotoGallery,{galleryState:this.state.galleryState}),isAdmin&&/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",disabled:!this.overallDirtyBit(),onClick:this.saveChanges},\"Save\"));}}]);return RampInfoPage;}(React.Component);export default RampInfoPage;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/index.js"],"names":["React","Button","Grid","RampDimensions","StatusBlock","Notes","GeneralInfo","PhotoGallery","RampInfoPage","props","overallDirtyBit","states","state","noteState","statusState","infoState","some","x","dirtyBit","saveChanges","e","preventDefault","newOrder","Object","assign","data","serializedNotes","notes","map","note","date","author","JSON","stringify","statusInput","fetch","method","headers","localStorage","getItem","body","then","res","json","console","log","noteStateCopy","statusStateCopy","infoStateCopy","setState","catch","err","error","handleNewNoteInput","newNote","target","value","saveNote","months","now","Date","getMonth","getDate","getFullYear","push","handleStatusInput","status","oldStatus","parse","parseInt","galleryState","leftSrc","entrySrc","rightSrc","isAdmin","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport RampDimensions from \"./RampDimensions\";\r\nimport StatusBlock from \"./StatusBlock\";\r\nimport Notes from \"./Notes\";\r\nimport GeneralInfo from \"./GeneralInfo\";\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport \"../Admin/admin_styles.css\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass RampInfoPage extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    // let new_progress = \"status\" in props.data ? this.statuses.indexOf(props.data[\"status\"]) : -1\r\n    // if (new_progress >= this.statuses.length || new_progress < -1){\r\n    //   new_progress = -1;\r\n    // }\r\n\r\n    this.state = {\r\n      noteState: {\r\n        newNote: \"\",\r\n        notes: JSON.parse(props.data[\"notes\"]).map(x => ({ ...x, dirtyBit: false})),\r\n        dirtyBit: false\r\n      },\r\n      statusState: {\r\n        statusInput: parseInt(props.data[\"status\"]),  // This is what will be posted when \"save changes\" is pressed.\r\n        oldStatus: parseInt(props.data[\"status\"]),\r\n        dirtyBit: false\r\n      },\r\n      infoState: {\r\n        dirtyBit: false\r\n      },\r\n      galleryState: {\r\n        dirtyBit: false,\r\n        leftSrc: props.data[\"step_left_photo\"],\r\n        entrySrc: props.data[\"entryway_photo\"],\r\n        rightSrc: props.data[\"step_right_photo\"]\r\n      }\r\n    }\r\n  }\r\n\r\n  overallDirtyBit = () => {\r\n    const states = [this.state.noteState, this.state.statusState, this.state.infoState];\r\n    return states.some(x => x.dirtyBit)\r\n  }\r\n\r\n  saveChanges = e => {\r\n    e.preventDefault();\r\n    const newOrder = {};\r\n    Object.assign(newOrder, this.props.data);\r\n\r\n    if (this.state.noteState.dirtyBit){\r\n      const serializedNotes = this.state.noteState.notes.map(note => ({\r\n        date: note.date,\r\n        author: note.author,\r\n        note: note.note\r\n      }));\r\n      newOrder[\"notes\"] = JSON.stringify(serializedNotes);\r\n    }\r\n    if (this.state.statusState.dirtyBit){\r\n      newOrder[\"status\"] = JSON.stringify(this.state.statusState.statusInput);\r\n    }\r\n    // TODO: general info\r\n\r\n    fetch(`/order-information/${newOrder[\"pk\"]}/`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token-access')}`   \r\n\t\t\t},\r\n      body: JSON.stringify(newOrder)\r\n    })\r\n    .then (res => {\r\n      res.json();\r\n    })\r\n    .then (res => {\r\n      console.log(res);\r\n      // TODO: update dirty bits\r\n      const noteStateCopy = {}\r\n      Object.assign(noteStateCopy, this.state.noteState)\r\n      noteStateCopy.dirtyBit = false;\r\n\r\n      const statusStateCopy = {}\r\n      Object.assign(statusStateCopy, this.state.statusState)\r\n      statusStateCopy.dirtyBit = false;\r\n\r\n      const infoStateCopy = {}\r\n      Object.assign(infoStateCopy, this.state.infoState)\r\n      infoStateCopy.dirtyBit = false;\r\n\r\n      this.setState({\r\n        noteState: noteStateCopy,\r\n        statusState: statusStateCopy,\r\n        infoState: infoStateCopy\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.error(\"there was an error with saving changes!\", err);\r\n    })\r\n    \r\n  }\r\n\r\n  // We place states here so that there is simply ONE universal save button\r\n  handleNewNoteInput = e => {\r\n    e.preventDefault();\r\n    // make a copy of the note state, and then update the newNote property\r\n    const noteStateCopy = {}\r\n    Object.assign(noteStateCopy, this.state.noteState)\r\n    noteStateCopy.newNote = e.target.value\r\n    // Save the note state\r\n    this.setState({\r\n      noteState: noteStateCopy \r\n    });\r\n  }\r\n\r\n  saveNote = e => {\r\n    e.preventDefault();\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"December\"\r\n    ];\r\n\r\n    const now = new Date();\r\n    const date = `${months[now.getMonth()]} ${now.getDate()}, ${now.getFullYear()}`;\r\n    const note = this.state.noteState.newNote;\r\n\r\n    const noteStateCopy = {};\r\n    Object.assign(noteStateCopy, this.state.noteState);\r\n    noteStateCopy.newNote = \"\";\r\n    noteStateCopy.notes.push({\r\n      date: date,\r\n      author: localStorage.getItem(\"username\"), // TODO: update\r\n      note: note,\r\n      dirtyBit: true\r\n    });\r\n    noteStateCopy.dirtyBit = true;\r\n    this.setState({\r\n      noteState: noteStateCopy\r\n    })\r\n  }\r\n\r\n  handleStatusInput = status => {\r\n    const statusStateCopy = {};\r\n    Object.assign(statusStateCopy, this.state.statusState);\r\n\r\n    statusStateCopy.statusInput = status;\r\n    statusStateCopy.dirtyBit = statusStateCopy.statusInput != statusStateCopy.oldStatus; // Remains as such until the entire dash's changes are saved.\r\n    this.setState({\r\n      statusState: statusStateCopy\r\n    });\r\n  }\r\n\r\n  render () {\r\n    const {data, isAdmin} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={4}>\r\n            <GeneralInfo isAdmin={isAdmin} data={ data } infoState={this.state.infoState}/>\r\n          </Grid>\r\n          <Grid item container xs={8}>\r\n            <Grid container>\r\n              <Grid item xs={6}>\r\n                <RampDimensions data={ data } isAdmin={isAdmin} />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <StatusBlock isAdmin={isAdmin} statusState={this.state.statusState} date={data[\"date_created\"]} handleStatusInput={this.handleStatusInput}/>\r\n              </Grid>\r\n            </Grid>\r\n            {isAdmin \r\n              && <Notes noteState={this.state.noteState} saveNote={this.saveNote} handleNewNoteInput={this.handleNewNoteInput}/>}\r\n          </Grid>\r\n        </Grid>\r\n        <PhotoGallery galleryState={this.state.galleryState}/>\r\n        {isAdmin && \r\n          <Button fullWidth variant=\"contained\" color=\"primary\" disabled={!this.overallDirtyBit()} onClick={this.saveChanges} >\r\n            Save\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RampInfoPage;\r\n"]},"metadata":{},"sourceType":"module"}