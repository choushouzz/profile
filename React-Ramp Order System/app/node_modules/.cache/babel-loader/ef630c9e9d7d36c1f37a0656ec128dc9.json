{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import Button from\"@material-ui/core/Button\";import{Redirect,Link}from'react-router-dom';import\"./style.css\";import Header from\"./Header\";import LoginForm from\"./login_form\";import RegisterForm from\"./register\";/* Component for the Login page */var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.state={inLoginForm:false,inRegisterForm:false,isAdmin:false};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this2=this;if(this.props.loggedIn)// user already logged in. they must actually log OUT to stay logged in.\nreturn/*#__PURE__*/React.createElement(Redirect,{to:\"/dashboard\"});return/*#__PURE__*/React.createElement(\"div\",{className:\"login__bg-image center\"},/*#__PURE__*/React.createElement(Header,null),!this.state.inLoginForm?/*#__PURE__*/React.createElement(AccountTypeSelector,{clickHandler:function clickHandler(isAdmin){return _this2.setState({inLoginForm:true,isAdmin:isAdmin});}}):this.state.inRegisterForm?/*#__PURE__*/React.createElement(RegisterForm,{register:this.props.register,goBack:function goBack(){return _this2.setState({inRegisterForm:false});}}):/*#__PURE__*/React.createElement(LoginForm,{username:this.props.username,login:this.props.login,register:function register(){return _this2.setState({inRegisterForm:true});},isAdmin:this.state.isAdmin,goBack:function goBack(){return _this2.setState({inLoginForm:false});},invalidLogin:this.props.invalidLogin}));}}]);return Login;}(React.Component);/* Component to select a different kind of account */function AccountTypeSelector(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"buttons center\"},/*#__PURE__*/React.createElement(Button,{className:\"block newRequestButton login__button\",onClick:function onClick(){return props.clickHandler(false);},variant:\"contained\",size:\"large\",style:{display:'block',marginLeft:'auto',marginRight:'auto',marginTop:'10%'}},\"Create New Ramp Request\",/*#__PURE__*/React.createElement(\"br\",null),\"Or\",/*#__PURE__*/React.createElement(\"br\",null),\"Check Status of Existing Ramp Request\"),/*#__PURE__*/React.createElement(Button,{className:\"block login__button\",onClick:function onClick(){return props.clickHandler(true);}},\"Admin\",/*#__PURE__*/React.createElement(\"br\",null),\"(StopGap Staff Only)\"));}export default Login;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Login/index.js"],"names":["React","Button","Redirect","Link","Header","LoginForm","RegisterForm","Login","props","state","inLoginForm","inRegisterForm","isAdmin","loggedIn","setState","register","username","login","invalidLogin","Component","AccountTypeSelector","clickHandler","display","marginLeft","marginRight","marginTop"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,kBAA/B,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,YAAzB,CAGA,kC,GACMC,CAAAA,K,0GACJ,eAAYC,KAAZ,CAAkB,uCAChB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,WAAW,CAAE,KADF,CAEXC,cAAc,CAAE,KAFL,CAGXC,OAAO,CAAE,KAHE,CAAb,CAFgB,aAOjB,C,yDAES,iBACR,GAAI,KAAKJ,KAAL,CAAWK,QAAf,CAAyB;AACvB,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,YAAb,EAAP,CAEF,mBACE,2BAAK,SAAS,CAAC,wBAAf,eACE,oBAAC,MAAD,MADF,CAEG,CAAC,KAAKJ,KAAL,CAAWC,WAAZ,cACC,oBAAC,mBAAD,EAAqB,YAAY,CAAG,sBAACE,OAAD,QAAc,CAAA,MAAI,CAACE,QAAL,CAAc,CAACJ,WAAW,CAAE,IAAd,CAAoBE,OAAO,CAAEA,OAA7B,CAAd,CAAd,EAApC,EADD,CAGG,KAAKH,KAAL,CAAWE,cAAX,cACE,oBAAC,YAAD,EAAc,QAAQ,CAAE,KAAKH,KAAL,CAAWO,QAAnC,CAA6C,MAAM,CAAI,wBAAM,CAAA,MAAI,CAACD,QAAL,CAAc,CAAEH,cAAc,CAAE,KAAlB,CAAd,CAAN,EAAvD,EADF,cAEE,oBAAC,SAAD,EAAW,QAAQ,CAAI,KAAKH,KAAL,CAAWQ,QAAlC,CAA2C,KAAK,CAAE,KAAKR,KAAL,CAAWS,KAA7D,CAAoE,QAAQ,CAAE,0BAAM,CAAA,MAAI,CAACH,QAAL,CAAc,CAACH,cAAc,CAAE,IAAjB,CAAd,CAAN,EAA9E,CAA4H,OAAO,CAAE,KAAKF,KAAL,CAAWG,OAAhJ,CAAyJ,MAAM,CAAI,wBAAM,CAAA,MAAI,CAACE,QAAL,CAAc,CAAEJ,WAAW,CAAE,KAAf,CAAd,CAAN,EAAnK,CAAgN,YAAY,CAAE,KAAKF,KAAL,CAAWU,YAAzO,EAPR,CADF,CAaD,C,mBA3BiBlB,KAAK,CAACmB,S,EA8B1B,qDACA,QAASC,CAAAA,mBAAT,CAA6BZ,KAA7B,CAAoC,CAClC,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACI,oBAAC,MAAD,EACG,SAAS,CAAC,sCADb,CAEE,OAAO,CAAE,yBAAMA,CAAAA,KAAK,CAACa,YAAN,CAAmB,KAAnB,CAAN,EAFX,CAGG,OAAO,CAAC,WAHX,CAGuB,IAAI,CAAC,OAH5B,CAIE,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAX,CAAoBC,UAAU,CAAE,MAAhC,CAAwCC,WAAW,CAAE,MAArD,CAA6DC,SAAS,CAAE,KAAxE,CAJT,yCAME,8BANF,mBAQE,8BARF,yCADJ,cAYI,oBAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAE,yBAAMjB,CAAAA,KAAK,CAACa,YAAN,CAAmB,IAAnB,CAAN,EAAjD,uBAEE,8BAFF,wBAZJ,CADF,CAoBD,CAED,cAAed,CAAAA,KAAf","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport \"./style.css\";\r\nimport Header from \"./Header\";\r\nimport LoginForm from \"./login_form\";\r\nimport RegisterForm from \"./register\";\r\n\r\n\r\n/* Component for the Login page */\r\nclass Login extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      inLoginForm: false,\r\n      inRegisterForm: false,\r\n      isAdmin: false\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (this.props.loggedIn) // user already logged in. they must actually log OUT to stay logged in.\r\n      return <Redirect to=\"/dashboard\" />\r\n    \r\n    return (\r\n      <div className=\"login__bg-image center\">\r\n        <Header />\r\n        {!this.state.inLoginForm ? \r\n          <AccountTypeSelector clickHandler={ (isAdmin) =>  this.setState({inLoginForm: true, isAdmin: isAdmin}) }/> : \r\n          (\r\n            this.state.inRegisterForm ? \r\n              <RegisterForm register={this.props.register} goBack = {() => this.setState({ inRegisterForm: false })}/> :\r\n              <LoginForm username = {this.props.username}login={this.props.login} register={() => this.setState({inRegisterForm: true })} isAdmin={this.state.isAdmin} goBack = {() => this.setState({ inLoginForm: false })} invalidLogin={this.props.invalidLogin} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* Component to select a different kind of account */\r\nfunction AccountTypeSelector(props) {\r\n  return (\r\n    <div className=\"buttons center\">\r\n        <Button\r\n           className=\"block newRequestButton login__button\"\r\n          onClick={() => props.clickHandler(false)}\r\n           variant=\"contained\" size='large'\r\n          style={{ display: 'block', marginLeft: 'auto', marginRight: 'auto', marginTop: '10%' }}>\r\n          Create New Ramp Request\r\n          <br/>\r\n          Or\r\n          <br/>\r\n          Check Status of Existing Ramp Request\r\n        </Button>\r\n        <Button className=\"block login__button\" onClick={() => props.clickHandler(true) }>\r\n          Admin\r\n          <br/>\r\n          (StopGap Staff Only)\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}