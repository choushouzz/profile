{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import Grid from'@material-ui/core/Grid';import{ReactComponent as IconLeftGrade}from\"@svgr/webpack?-svgo,+titleProp,+ref!./ramp-icons/left_grade.svg\";import{ReactComponent as IconRightGrade}from\"@svgr/webpack?-svgo,+titleProp,+ref!./ramp-icons/right_grade.svg\";import{ReactComponent as IconLeftHeight}from\"@svgr/webpack?-svgo,+titleProp,+ref!./ramp-icons/left-height.svg\";import{ReactComponent as IconRightHeight}from\"@svgr/webpack?-svgo,+titleProp,+ref!./ramp-icons/right-height.svg\";import{ReactComponent as IconLength}from\"@svgr/webpack?-svgo,+titleProp,+ref!./ramp-icons/length.svg\";// import {ReactComponent as IconWidth} from \"./ramp-icons/width.svg\";\n/** Component that will display dimensions for the ramp.\r\n *  Uses a 2D image for now, could potentially be updated to show a 3D model.\r\n * \r\n//  *  @prop {object} ramp - Data on the ramp. Properties given are l_height, r_height, and color. The remaining properties are calculated. Width measurements are numbers measured in inches.\r\n **/var RampDimensions=/*#__PURE__*/function(_React$Component){_inherits(RampDimensions,_React$Component);var _super=_createSuper(RampDimensions);function RampDimensions(props){var _this;_classCallCheck(this,RampDimensions);_this=_super.call(this,props);_this.state={data:{\"Left Height\":{value:\"\",icon:/*#__PURE__*/React.createElement(IconLeftHeight,{style:{width:\"24px\",height:\"auto\"}})},\"Right Height\":{value:\"\",icon:/*#__PURE__*/React.createElement(IconRightHeight,{style:{width:\"24px\",height:\"auto\"}})},\"Color\":{value:\"\",icon:null}},error:null,isLoaded:false};return _this;}_createClass(RampDimensions,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.isAdmin){this.setState({data:{// \"Length\": {\n//   value: \"\",\n//   icon: < IconLength style={{width: \"24px\", height: \"auto\"}}/>\n// },\n// \"Width\": {\n//   value: \"\",\n//   icon: < IconWidth style={{width: \"24px\", height: \"auto\"}}/>\n// },\n\"Left Height\":{value:this.props.data[\"step_left_height\"],icon:/*#__PURE__*/React.createElement(IconLeftHeight,{style:{width:\"24px\",height:\"auto\"}})},\"Right Height\":{value:this.props.data[\"step_right_height\"],icon:/*#__PURE__*/React.createElement(IconRightHeight,{style:{width:\"24px\",height:\"auto\"}})},// \"Left Grade\": {\n//   value: \"\",\n//   icon: < IconLeftGrade style={{width: \"24px\", height: \"auto\"}}/>\n// },\n// \"Right Grade\": {\n//   value: \"\",\n//   icon: < IconRightGrade style={{width: \"24px\", height: \"auto\"}}/>\n// },\n\"Color\":{value:this.props.data[\"ramp_colour\"],icon:null}},isLoaded:true});}else if(this.props.isAdmin){console.log(this.props.data);this.setState({data:{\"Left Height\":{value:this.props.data[\"step_left_height\"],icon:/*#__PURE__*/React.createElement(IconLeftHeight,{style:{width:\"24px\",height:\"auto\"}})},\"Right Height\":{value:this.props.data[\"step_right_height\"],icon:/*#__PURE__*/React.createElement(IconRightHeight,{style:{width:\"24px\",height:\"auto\"}})},\"Entryway Photo\":{value:this.props.data[\"entryway_photo\"],icon:/*#__PURE__*/React.createElement(IconLength,{style:{width:\"24px\",height:\"auto\"}})},\"Left Side Step Photo\":{value:this.props.data[\"step_left_photo\"],icon:/*#__PURE__*/React.createElement(IconLeftGrade,{style:{width:\"24px\",height:\"auto\"}})},\"Right Side Step Photo\":{value:this.props.data[\"step_right_photo\"],icon:/*#__PURE__*/React.createElement(IconRightGrade,{style:{width:\"24px\",height:\"auto\"}})},\"Color\":{value:this.props.data[\"ramp_colour\"],icon:null}},isLoaded:true});}}},{key:\"render\",value:function render(){var _this$state=this.state,listings=_this$state.listings,error=_this$state.error,isLoaded=_this$state.isLoaded;if(error){return/*#__PURE__*/React.createElement(\"div\",null,\" Error: \",error.message);}else if(!isLoaded){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}else{// const { ramp } = this.props;\n// const l_height = ramp.l_height;\n// const r_height = ramp.r_height;\n// const color = ramp.color;\n// const len = Math.max(l_height, r_height) * 6;\n// const width = 34;\n// const r_grade = (Math.atan(r_height / len) * (180 / Math.PI)).toFixed(2);\n// const l_grade = (Math.atan(l_height / len) * (180 / Math.PI)).toFixed(2);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"block\"},/*#__PURE__*/React.createElement(Grid,{container:true,className:\"ramp-dimensions\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},\"Ramp Dimensions\")),Object.entries(this.state.data).map(function(x,i){var key=x[0];var _x$=x[1],value=_x$.value,icon=_x$.icon;return/*#__PURE__*/React.createElement(Grid,{container:true,className:\"kv\",key:i},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1,className:\"kv-key\"},icon&&icon),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5,className:\"kv-key\"},/*#__PURE__*/React.createElement(\"strong\",null,key)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6,className:\"kv-value\"},/*#__PURE__*/React.createElement(\"span\",null,value)));})));}}}]);return RampDimensions;}(React.Component);export default RampDimensions;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/RampInfoPage/RampDimensions.js"],"names":["React","Grid","RampDimensions","props","state","data","value","icon","width","height","error","isLoaded","isAdmin","setState","console","log","listings","message","Object","entries","map","x","i","key","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {ReactComponent as IconLeftGrade} from \"./ramp-icons/left_grade.svg\";\r\nimport {ReactComponent as IconRightGrade} from \"./ramp-icons/right_grade.svg\";\r\nimport {ReactComponent as IconLeftHeight} from \"./ramp-icons/left-height.svg\";\r\nimport {ReactComponent as IconRightHeight} from \"./ramp-icons/right-height.svg\";\r\nimport {ReactComponent as IconLength} from \"./ramp-icons/length.svg\";\r\n// import {ReactComponent as IconWidth} from \"./ramp-icons/width.svg\";\r\n\r\n/** Component that will display dimensions for the ramp.\r\n *  Uses a 2D image for now, could potentially be updated to show a 3D model.\r\n * \r\n//  *  @prop {object} ramp - Data on the ramp. Properties given are l_height, r_height, and color. The remaining properties are calculated. Width measurements are numbers measured in inches.\r\n **/\r\nclass RampDimensions extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n       data : {\r\n       \r\n        \r\n        \"Left Height\": {\r\n          value: \"\",\r\n          icon: < IconLeftHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        \"Right Height\": {\r\n          value: \"\",\r\n          icon: < IconRightHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n\r\n        \"Color\": {\r\n          value: \"\",\r\n          icon: null\r\n        },\r\n      },\r\n      error: null,\r\n      isLoaded: false,\r\n\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isAdmin){\r\n    this.setState({\r\n      data : {\r\n        \r\n        // \"Length\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLength style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Width\": {\r\n        //   value: \"\",\r\n        //   icon: < IconWidth style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Left Height\": {\r\n          value: this.props.data[\"step_left_height\"],\r\n          icon: < IconLeftHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        \"Right Height\": {\r\n          value: this.props.data[\"step_right_height\"],\r\n          icon: < IconRightHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n        },\r\n        // \"Left Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconLeftGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        // \"Right Grade\": {\r\n        //   value: \"\",\r\n        //   icon: < IconRightGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n        // },\r\n        \"Color\": {\r\n          value: this.props.data[\"ramp_colour\"],\r\n          icon: null\r\n        },\r\n      },\r\n      isLoaded: true,\r\n    });\r\n  }\r\n    else if (this.props.isAdmin){\r\n      console.log(this.props.data)\r\n      this.setState({\r\n        data : {\r\n          \r\n          \r\n         \r\n          \"Left Height\": {\r\n            value: this.props.data[\"step_left_height\"],\r\n            icon: < IconLeftHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n          },\r\n          \"Right Height\": {\r\n            value: this.props.data[\"step_right_height\"],\r\n            icon: < IconRightHeight style={{width: \"24px\", height: \"auto\"}}/>\r\n          },\r\n          \"Entryway Photo\": {\r\n            value: this.props.data[\"entryway_photo\"],\r\n            icon: < IconLength style={{width: \"24px\", height: \"auto\"}}/>\r\n          },\r\n          \"Left Side Step Photo\": {\r\n             value: this.props.data[\"step_left_photo\"],\r\n             icon: < IconLeftGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n          },\r\n          \"Right Side Step Photo\": {\r\n             value: this.props.data[\"step_right_photo\"],\r\n             icon: < IconRightGrade style={{width: \"24px\", height: \"auto\"}}/>\r\n           },\r\n          \"Color\": {\r\n            value: this.props.data[\"ramp_colour\"],\r\n            icon: null\r\n          },\r\n        },\r\n        isLoaded: true,\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { listings, error, isLoaded } = this.state;\r\n    if (error) {\r\n      return <div> Error: {error.message}</div>\r\n    }\r\n    else if (!isLoaded) {\r\n      return <div>Loading...</div>\r\n    }\r\n    else {\r\n    // const { ramp } = this.props;\r\n\r\n    // const l_height = ramp.l_height;\r\n    // const r_height = ramp.r_height;\r\n    // const color = ramp.color;\r\n    // const len = Math.max(l_height, r_height) * 6;\r\n    // const width = 34;\r\n    // const r_grade = (Math.atan(r_height / len) * (180 / Math.PI)).toFixed(2);\r\n    // const l_grade = (Math.atan(l_height / len) * (180 / Math.PI)).toFixed(2);\r\n\r\n \r\n\r\n    return ( \r\n      <div className={\"block\"}>\r\n        {/* This div is seperate from the grid container because this needs the \"block\" class. If the class is on Grid, layout issues appear. */ }\r\n        <Grid container className={\"ramp-dimensions\"} >\r\n          <Grid item xs={12}>\r\n            <h2 className=\"block-title\">\r\n              Ramp Dimensions\r\n            </h2>\r\n          </Grid>\r\n\r\n          {/* Diagram not needed unless it matches ramp size. */}\r\n          {/* <Grid item xs={12}>\r\n            <RampImage className={\"ramp-dimensions-image center-block\"} />\r\n          </Grid> */}\r\n          {\r\n            Object.entries(this.state.data).map((x, i) => {\r\n              const key = x[0];\r\n              const {value, icon} = x[1];\r\n\r\n              return (\r\n                <Grid container className={\"kv\"} key={i}>\r\n                  <Grid item xs={1} className={\"kv-key\"}>\r\n                    {icon && icon}\r\n                  </Grid>\r\n                  <Grid item xs={5} className={\"kv-key\"}>\r\n                    <strong >\r\n                      {key}\r\n                    </strong>\r\n                  </Grid>\r\n                  <Grid item xs={6} className={\"kv-value\"}>\r\n                    <span>\r\n                      {value}\r\n                    </span>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })\r\n          }\r\n        </Grid>   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default RampDimensions;\r\n"]},"metadata":{},"sourceType":"module"}