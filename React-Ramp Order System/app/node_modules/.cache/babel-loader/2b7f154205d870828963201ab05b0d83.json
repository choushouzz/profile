{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import Button from\"@material-ui/core/Button\";import TextField from'@material-ui/core/TextField';import Grid from'@material-ui/core/Grid';import{Alert}from'@material-ui/lab';/**\r\n * Form for filling in login credentials.\r\n * \r\n * @prop {function} login - use to login user. Takes new user object\r\n * @prop {function} goBack - use to return to parent login page.\r\n * @prop {boolean}  isAdmin - true iff the login form is for an admin\r\n */var LoginForm=/*#__PURE__*/function(_React$Component){_inherits(LoginForm,_React$Component);var _super=_createSuper(LoginForm);function LoginForm(props){var _this;_classCallCheck(this,LoginForm);_this=_super.call(this,props);_this.validateAndSubmit=function(e){e.preventDefault();if(_this.form.current.reportValidity()){_this.props.login(_this.state.username,_this.state.password,_this.props.isAdmin);}};_this.state={username:\"\",password:\"\"};_this.form=React.createRef();return _this;}_createClass(LoginForm,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"buttons center\"},/*#__PURE__*/React.createElement(\"form\",{ref:this.form,onSubmit:this.validateAndSubmit},/*#__PURE__*/React.createElement(TextField,{value:this.state.username,onChange:function onChange(e){return _this2.setState({username:e.target.value});},variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email\",name:\"email\",type:\"text\"}),/*#__PURE__*/React.createElement(TextField,{value:this.state.pwd,onChange:function onChange(e){return _this2.setState({password:e.target.value});},variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"current-password\"}),this.props.invalidLogin&&/*#__PURE__*/React.createElement(Alert,{severity:\"error\"},this.props.loginMsg),/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\"},\"Sign in\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Button,{className:\"center_link\",onClick:this.props.goBack},\"Back to home page\")),// We only allow clients to create new accounts. Stopgap accounts are made manually.\n!this.props.isAdmin&&/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Button,{className:\"center_link\",onClick:this.props.register},\"Don't have an account?\",/*#__PURE__*/React.createElement(\"br\",null),\"Sign Up!\")))));}}]);return LoginForm;}(React.Component);export default LoginForm;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Login/login_form.js"],"names":["React","Button","TextField","Grid","Alert","LoginForm","props","validateAndSubmit","e","preventDefault","form","current","reportValidity","login","state","username","password","isAdmin","createRef","setState","target","value","pwd","invalidLogin","loginMsg","goBack","register","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n/**\r\n * Form for filling in login credentials.\r\n * \r\n * @prop {function} login - use to login user. Takes new user object\r\n * @prop {function} goBack - use to return to parent login page.\r\n * @prop {boolean}  isAdmin - true iff the login form is for an admin\r\n */\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    }\r\n    this.form = React.createRef();\r\n  }\r\n\r\n  validateAndSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.form.current.reportValidity()){\r\n      this.props.login(this.state.username, this.state.password, this.props.isAdmin)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"buttons center\">\r\n        <form ref={this.form} onSubmit={this.validateAndSubmit}>\r\n          <TextField\r\n            value={this.state.username}\r\n            onChange = { e => this.setState({\r\n              username: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n          />\r\n  \r\n          <TextField\r\n            value = {this.state.pwd}\r\n            onChange = { e => this.setState({\r\n              password: e.target.value\r\n            })}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n  \r\n          {this.props.invalidLogin && (<Alert severity=\"error\">{this.props.loginMsg}</Alert>) }\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n          >\r\n              Sign in\r\n          </Button>\r\n\r\n  \r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Button className=\"center_link\" onClick={this.props.goBack} >\r\n                Back to home page\r\n              </Button>\r\n            </Grid>\r\n            { // We only allow clients to create new accounts. Stopgap accounts are made manually.\r\n            !this.props.isAdmin && \r\n            <Grid item xs>\r\n              <Button className=\"center_link\" onClick={this.props.register}>\r\n                Don't have an account?<br/>Sign Up!\r\n              </Button>\r\n            </Grid>}\r\n            \r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;                                                                                                                                           "]},"metadata":{},"sourceType":"module"}