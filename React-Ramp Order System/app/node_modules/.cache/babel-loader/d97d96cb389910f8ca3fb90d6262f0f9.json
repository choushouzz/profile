{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{render}from\"react-dom\";import{Route,Switch,BrowserRouter,Redirect}from'react-router-dom';import'./App.css';import Login from'./react-components/Login';import Dashboard from'./react-components/Dashboard';import UserForm from'./react-components/RequestForm';import{LinearProgress}from'@material-ui/core';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.refresh=function(){// idk why i made this a seperate function, but w/e\nconsole.log('refreshing!');var refreshToken=localStorage.hasOwnProperty(\"token-refresh\")?localStorage.getItem(\"token-refresh\"):\"\";// token is NOT valid, so attempt to refresh.\nfetch(\"/api/token/refresh/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({refresh:refreshToken})}).then(function(res){return res.json();}).then(function(res){if('access'in res){localStorage.setItem(\"token-access\",res.access);_this.setState({loggedIn:true,isCurrentlyCheckingStorageForLogin:false});}else{_this.setState({loggedIn:false,isCurrentlyCheckingStorageForLogin:false});}},function(error){// REFRESH ERROR\nconsole.error(error);_this.setState({loggedIn:false,isCurrentlyCheckingStorageForLogin:false});});};_this.login=function(user,pwd,isAdmin){console.log(\"StopGap: Logging in...\");if(_this.state.loggedIn){//already logged in.\nconsole.error(\"Stopgap: user already logged in.\");// Refreshes the page\n_this.setState({loggedIn:false});_this.setState({loggedIn:true});return;}// validate token\nfetch(\"/api/token/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({\"username\":user,\"password\":pwd})}).then(function(res){return res.json();}).then(function(res){console.log(res);if('detail'in res){localStorage.removeItem('token-access');localStorage.removeItem('token-refresh');_this.setState({loggedIn:false,invalidLogin:true,loginMsg:\"Login credentials not valid.\"});}else if('access'in res&&'refresh'in res&&'user'in res&&'isAdmin'in res){// First check if the user is of the correct account type (that is, only clients can access the client dashboard and vice versa)\nif(res.isAdmin!=isAdmin){_this.setState({loggedIn:false,username:user,invalidLogin:true,loginMsg:\"Attempting to use a\".concat(res.isAdmin?\"n admin\":\" client\",\" account to access the \").concat(isAdmin?\"admin\":\"client\",\" dashboard\")});}else{localStorage.setItem('token-access',res.access);localStorage.setItem('token-refresh',res.refresh);localStorage.setItem('username',res.user);localStorage.setItem('is-admin',res.isAdmin);_this.setState({loggedIn:true,isAdmin:isAdmin,invalidLogin:false,username:user,loginMsg:\"\"});}}},function(err){_this.setState({loggedIn:false,invalidLogin:true,loginMsg:\"An error occurred while attempting to validate login credentials.\"});console.error(err);});};_this.register=function(username,password,first_name,last_name,isAdmin){console.log(\"StopGap: Registering new user...\");// User already logged in.\nif(_this.state.loggedIn){console.error(\"Stopgap: user already logged in.\");// Refreshes the page\n_this.setState({loggedIn:false,username:username});_this.setState({loggedIn:true,username:username});return;}// Register user using Django API\nfetch(\"/users/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({\"username\":username,\"password\":password,\"email\":username,\"first_name\":first_name,\"last_name\":last_name,\"is_staff\":isAdmin})}).then(function(res){// Login user with newly created credentials\n_this.login(username,password,isAdmin);});};_this.logout=function(){_this.setState({loggedIn:false,isAdmin:false,invalidLogin:false,loginMsg:\"\",username:\"\"});localStorage.removeItem('token-access');localStorage.removeItem('token-refresh');localStorage.removeItem('username');localStorage.removeItem('is-admin');};_this.quickRefresh=function(){console.log('(quick) refreshing!');var refreshToken=localStorage.hasOwnProperty(\"token-refresh\")?localStorage.getItem(\"token-refresh\"):\"\";var refreshSuccessful=false;var async_flag=true;// Otherwise, refresh the token\nreturn new Promise(function(resolve,reject){fetch(\"/api/token/refresh/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({refresh:refreshToken})}).then(function(res){return res.json();}).then(function(res){if('access'in res){localStorage.setItem(\"token-access\",res.access);resolve(true);}else{_this.setState({loggedIn:false,isCurrentlyCheckingStorageForLogin:false});resolve(false);}},function(error){// REFRESH ERROR\nconsole.error(error);async_flag=false;_this.setState({loggedIn:false,isCurrentlyCheckingStorageForLogin:false});reject(false);});});};_this.verifyTokens=function(){_this.setState({loggedIn:true,isCurrentlyCheckingStorageForLogin:true});// We must verify the token first.\nvar accessToken=localStorage.hasOwnProperty(\"token-access\")?localStorage.getItem(\"token-access\"):\"\";return new Promise(function(resolve,reject){fetch(\"/api/token/verify/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({token:accessToken})}).then(function(res){return res.ok;}).then(function(validToken){console.log('ok ok');if(validToken){console.log('its good');resolve(true);}else{console.log('bouta refresh');_this.quickRefresh().then(function(value){resolve(value);});}}).catch(function(err){console.error(err);reject(false);});});};_this.state={loggedIn:false,// by default, no one is logged in\ninvalidLogin:false,loginMsg:\"\",isAdmin:false,// TODO: properly store this\nisCurrentlyCheckingStorageForLogin:true,error:null,isLoaded:false,username:\"\"};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var accessToken=localStorage.hasOwnProperty(\"token-access\")?localStorage.getItem(\"token-access\"):\"\";// check if the existing access token is valid.\n// If not, attempt to retrieve a new one using the refresh token\nfetch(\"/api/token/verify/\",{method:'POST',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({token:accessToken})}).then(function(res){if(res.ok){_this2.setState({loggedIn:true,isCurrentlyCheckingStorageForLogin:false});return;}console.log('about to refresh . . .');_this2.refresh();},function(error){// VERIFY ERROR\nconsole.error(error);_this2.setState({loggedIn:false,isCurrentlyCheckingStorageForLogin:false});});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Switch,null,\" \",/*#__PURE__*/React.createElement(Route,{path:\"/login\",render:function render(){return/*#__PURE__*/React.createElement(Login,{loggedIn:_this3.state.loggedIn,login:_this3.login,logout:_this3.logout,register:_this3.register,isAdmin:_this3.state.isAdmin,invalidLogin:_this3.state.invalidLogin,loginMsg:_this3.state.loginMsg});}}),/*#__PURE__*/React.createElement(Route,{path:\"/dashboard\",render:function render(){return _this3.state.loggedIn?/*#__PURE__*/React.createElement(Dashboard,{loggedIn:_this3.state.loggedIn,logout:_this3.logout,verifyTokens:_this3.verifyTokens}):/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/form\",render:function render(){return/*#__PURE__*/React.createElement(UserForm,{username:_this3.state.username,verifyTokens:_this3.verifyTokens});}}),/*#__PURE__*/React.createElement(Route,{path:\"/\",render:function render(){return _this3.state.isCurrentlyCheckingStorageForLogin?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Loading . . .\"),/*#__PURE__*/React.createElement(LinearProgress,null)):/*#__PURE__*/React.createElement(Redirect,{path:\"/\",to:_this3.state.loggedIn?\"/dashboard\":\"/login\"});}}))));}}]);return App;}(React.Component);export default App;var container=document.getElementById(\"root\");render(/*#__PURE__*/React.createElement(App,null),container);","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/App.js"],"names":["React","render","Route","Switch","BrowserRouter","Redirect","Login","Dashboard","UserForm","LinearProgress","App","props","refresh","console","log","refreshToken","localStorage","hasOwnProperty","getItem","fetch","method","headers","body","JSON","stringify","then","res","json","setItem","access","setState","loggedIn","isCurrentlyCheckingStorageForLogin","error","login","user","pwd","isAdmin","state","removeItem","invalidLogin","loginMsg","username","err","register","password","first_name","last_name","logout","quickRefresh","refreshSuccessful","async_flag","Promise","resolve","reject","verifyTokens","accessToken","token","ok","validToken","value","catch","isLoaded","Component","container","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './react-components/Login';\r\nimport Dashboard from './react-components/Dashboard';\r\nimport UserForm from './react-components/RequestForm';\r\nimport { LinearProgress } from '@material-ui/core';\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false, // by default, no one is logged in\r\n      invalidLogin: false,\r\n      loginMsg: \"\",\r\n      isAdmin: false, // TODO: properly store this\r\n      isCurrentlyCheckingStorageForLogin: true,\r\n      error: null,\r\n      isLoaded: false,\r\n      username:\"\"\r\n      \r\n    };\r\n  }\r\n\r\n  refresh = () => { // idk why i made this a seperate function, but w/e\r\n    console.log('refreshing!')\r\n    const refreshToken = localStorage.hasOwnProperty(\"token-refresh\") \r\n      ? localStorage.getItem(\"token-refresh\") : \"\";\r\n\r\n    // token is NOT valid, so attempt to refresh.\r\n    fetch(\"/api/token/refresh/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        refresh: refreshToken\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if ('access' in res){\r\n          localStorage.setItem(\"token-access\", res.access)\r\n          this.setState({\r\n            loggedIn: true,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            loggedIn: false,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          })\r\n        }\r\n    }, error => { // REFRESH ERROR\r\n      console.error(error)\r\n      this.setState({\r\n        loggedIn: false,\r\n        isCurrentlyCheckingStorageForLogin: false\r\n      })\r\n    })\r\n  }\r\n\r\n  login = (user, pwd, isAdmin) => {\r\n    console.log(\"StopGap: Logging in...\");\r\n    if (this.state.loggedIn){ //already logged in.\r\n      console.error(\"Stopgap: user already logged in.\");\r\n      // Refreshes the page\r\n      this.setState({\r\n        loggedIn: false,\r\n      });\r\n      this.setState({\r\n        loggedIn: true,\r\n      });\r\n      return;\r\n    }\r\n    // validate token\r\n    fetch(\"/api/token/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"username\": user,\r\n        \"password\": pwd\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res)\r\n      if ('detail' in res){\r\n        localStorage.removeItem('token-access')\r\n        localStorage.removeItem('token-refresh')\r\n        this.setState({\r\n          loggedIn: false,\r\n          invalidLogin: true,\r\n          loginMsg: \"Login credentials not valid.\"\r\n        });\r\n      } else if ('access' in res && 'refresh' in res && 'user' in res && 'isAdmin' in res){\r\n        // First check if the user is of the correct account type (that is, only clients can access the client dashboard and vice versa)\r\n        if (res.isAdmin != isAdmin){\r\n          this.setState({\r\n            loggedIn: false,\r\n            username:user,\r\n            invalidLogin: true,\r\n            loginMsg: `Attempting to use a${res.isAdmin ? \"n admin\" : \" client\"} account to access the ${isAdmin ? \"admin\" : \"client\"} dashboard`\r\n          });\r\n        } else {\r\n          localStorage.setItem('token-access', res.access);\r\n          localStorage.setItem('token-refresh', res.refresh);\r\n          localStorage.setItem('username', res.user);\r\n          localStorage.setItem('is-admin', res.isAdmin);\r\n          this.setState({\r\n            loggedIn: true,\r\n            isAdmin: isAdmin,\r\n            invalidLogin: false,\r\n            username:user,\r\n            loginMsg: \"\"\r\n          });\r\n        }\r\n      }\r\n    }, err => {\r\n      this.setState({\r\n        loggedIn: false,\r\n        invalidLogin: true,\r\n        loginMsg: \"An error occurred while attempting to validate login credentials.\"\r\n      });\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  register = (username, password, first_name, last_name, isAdmin) => {\r\n    console.log(\"StopGap: Registering new user...\");\r\n\r\n    // User already logged in.\r\n    if (this.state.loggedIn){\r\n      console.error(\"Stopgap: user already logged in.\");\r\n      // Refreshes the page\r\n      this.setState({\r\n        loggedIn: false,\r\n        username:username\r\n      });\r\n      this.setState({\r\n        loggedIn: true,\r\n        username:username\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Register user using Django API\r\n    fetch(\"/users/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"username\": username,\r\n        \"password\": password,\r\n        \"email\": username,\r\n        \"first_name\": first_name,\r\n        \"last_name\": last_name,\r\n        \"is_staff\": isAdmin\r\n      })\r\n    }).then(res => {\r\n      // Login user with newly created credentials\r\n      this.login(username, password, isAdmin);\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    this.setState({\r\n      loggedIn: false,\r\n      isAdmin: false,\r\n      invalidLogin: false,\r\n      loginMsg: \"\",\r\n      username:\"\"\r\n    });\r\n    localStorage.removeItem('token-access');\r\n    localStorage.removeItem('token-refresh');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('is-admin');          \r\n  }\r\n\r\n  quickRefresh = () => {\r\n    console.log('(quick) refreshing!')\r\n    const refreshToken = localStorage.hasOwnProperty(\"token-refresh\") \r\n      ? localStorage.getItem(\"token-refresh\") : \"\";\r\n    \r\n    let refreshSuccessful = false;\r\n    let async_flag = true;\r\n    // Otherwise, refresh the token\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/api/token/refresh/\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          refresh: refreshToken\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if ('access' in res){\r\n          localStorage.setItem(\"token-access\", res.access)\r\n          resolve(true);\r\n        } else {\r\n          this.setState({\r\n            loggedIn: false,\r\n            isCurrentlyCheckingStorageForLogin: false\r\n          });\r\n          resolve(false);\r\n        }\r\n      }, error => { // REFRESH ERROR\r\n        console.error(error)\r\n        async_flag = false;\r\n        this.setState({\r\n          loggedIn: false,\r\n          isCurrentlyCheckingStorageForLogin: false\r\n        })\r\n        reject(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Params need not contain the authorization token, it will be automatically added.\r\n   */\r\n  verifyTokens = () => {\r\n    this.setState({\r\n      loggedIn: true,\r\n      isCurrentlyCheckingStorageForLogin: true\r\n    });\r\n    // We must verify the token first.\r\n    let accessToken = localStorage.hasOwnProperty(\"token-access\") \r\n      ? localStorage.getItem(\"token-access\") : \"\";\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/api/token/verify/\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          token: accessToken\r\n        })\r\n      })\r\n      .then( res => {\r\n        return res.ok;\r\n      })\r\n      .then( validToken => {\r\n        console.log('ok ok');\r\n        if (validToken){\r\n          console.log('its good');\r\n          resolve(true);\r\n        } else {\r\n          console.log('bouta refresh');\r\n          this.quickRefresh().then(value => {\r\n            resolve(value);\r\n          });\r\n        }\r\n      })\r\n      .catch( err => {\r\n        console.error(err);\r\n        reject(false);\r\n      });\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const accessToken = localStorage.hasOwnProperty(\"token-access\") \r\n      ? localStorage.getItem(\"token-access\") : \"\";\r\n    // check if the existing access token is valid.\r\n    // If not, attempt to retrieve a new one using the refresh token\r\n    fetch(\"/api/token/verify/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        token: accessToken\r\n      })\r\n    })\r\n    .then( res => {\r\n      if (res.ok){\r\n        this.setState({\r\n          loggedIn: true,\r\n          isCurrentlyCheckingStorageForLogin: false\r\n        });\r\n        return;\r\n      }\r\n      console.log('about to refresh . . .')\r\n      this.refresh();\r\n      \r\n    }, error => { // VERIFY ERROR\r\n      console.error(error)\r\n      this.setState({\r\n        loggedIn: false,\r\n        isCurrentlyCheckingStorageForLogin: false\r\n      })\r\n    });\r\n  }\r\n\r\n  render() { \r\n      return (\r\n        <div> \r\n          <BrowserRouter>\r\n            <Switch> { /* Similar to a switch statement - shows the component depending on the URL path */ }\r\n              { /* Each Route below shows a different component depending on the exact path in the URL  */ }\r\n              <Route\r\n                path='/login'\r\n                render={() => (\r\n                  <Login loggedIn={this.state.loggedIn}\r\n                  login={this.login}\r\n                  logout={this.logout}\r\n                  register={this.register}\r\n                  isAdmin={this.state.isAdmin}\r\n                  invalidLogin={this.state.invalidLogin}\r\n                  loginMsg={this.state.loginMsg} />\r\n                )}\r\n              />\r\n              <Route path='/dashboard' render={() => (\r\n                this.state.loggedIn \r\n                  ? <Dashboard loggedIn={this.state.loggedIn} logout={this.logout} verifyTokens={this.verifyTokens} />\r\n                  : <Redirect to='/login' />\r\n              )} />\r\n              <Route exact path='/form' render={() => (<UserForm username ={this.state.username} verifyTokens={this.verifyTokens} />)}/>\r\n              <Route path='/' render={() => (\r\n                this.state.isCurrentlyCheckingStorageForLogin \r\n                  ? (<div>\r\n                      <h1>Loading . . .</h1>\r\n                      <LinearProgress />\r\n                    </div>)\r\n                  : <Redirect path='/' to={this.state.loggedIn ? \"/dashboard\" : \"/login\" } />\r\n              )} />\r\n            </Switch>\r\n            \r\n          </BrowserRouter>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\nconst container = document.getElementById(\"root\");\r\nrender(<App />, container);\r\n"]},"metadata":{},"sourceType":"module"}