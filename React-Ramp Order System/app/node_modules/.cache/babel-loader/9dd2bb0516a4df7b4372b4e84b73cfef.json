{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\owner\\\\Desktop\\\\team\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import\"./admin_styles.css\";import Grid from'@material-ui/core/Grid';import ListingBox from\"../../Listings\";/* Primary Component for the Admin Dashboard page */var AdminDashboard=/*#__PURE__*/function(_React$Component){_inherits(AdminDashboard,_React$Component);var _super=_createSuper(AdminDashboard);function AdminDashboard(props){var _this;_classCallCheck(this,AdminDashboard);_this=_super.call(this,props);_this.state={error:null,isLoaded:false,orders:[]};return _this;}_createClass(AdminDashboard,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;console.log('wow');console.log(typeof this.props.verifyTokens());this.props.verifyTokens().then(function(valid){console.log(valid);if(!valid)return;fetch(\"/order-information/\",{method:'GET',headers:{'Accept':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token-access'))}}).then(function(res){if(res.ok)return res.json();throw new Error(\"Something went wrong with error code \".concat(res.status));}).then(function(result){var orders=result[\"results\"];_this2.setState({isLoaded:true,orders:orders});},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){_this2.setState({isLoaded:true,error:error});});});}},{key:\"render\",value:function render(){var _this3=this;var gotoFuncs=this.props.gotoFuncs;var _this$state=this.state,orders=_this$state.orders,isLoaded=_this$state.isLoaded;var total=orders.length;var build_num=0;var paint_num=0;var delivery_num=0;var complete_num=0;if(isLoaded){for(var i=0;i<total;i++){// More efficient than built-in filter functions\nvar phase=orders[i][\"status\"];if(phase==2){// TODO: this works, but could be cleaner . . .\nbuild_num++;}if(phase==3){paint_num++;}if(phase==4){delivery_num++;}if(phase==5){complete_num++;}}}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(NumberStat,{title:\"Total Requests\",stat:total})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(NumberStat,{title:\"Ready For Build\",stat:build_num})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(NumberStat,{title:\"Ready For Paint\",stat:paint_num})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(NumberStat,{title:\"Out for Delivery\",stat:delivery_num})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(NumberStat,{title:\"Completed Ramps\",stat:complete_num}))),isLoaded&&/*#__PURE__*/React.createElement(ListingBox,{click:function click(data){return gotoFuncs.ramp_info(true,data,_this3.props.verifyTokens);},orders:orders,isAdmin:this.props.isAdmin,isLoaded:isLoaded}));}}]);return AdminDashboard;}(React.Component);function NumberStat(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"number-stat block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"block-title\"},props.title),/*#__PURE__*/React.createElement(\"span\",{className:\"number-stat-num\"},props.stat));}export default AdminDashboard;","map":{"version":3,"sources":["C:/Users/owner/desktop/team/app/src/components/react-components/Dashboard/Admin/admin_dash.js"],"names":["React","Grid","ListingBox","AdminDashboard","props","state","error","isLoaded","orders","console","log","verifyTokens","then","valid","fetch","method","headers","localStorage","getItem","res","ok","json","Error","status","result","setState","gotoFuncs","total","length","build_num","paint_num","delivery_num","complete_num","i","phase","data","ramp_info","isAdmin","Component","NumberStat","title","stat"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./admin_styles.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListingBox from \"../../Listings\";\r\n\r\n/* Primary Component for the Admin Dashboard page */\r\nclass AdminDashboard extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      orders: []\r\n    }\r\n  }\r\n  \r\n\r\n  componentWillMount() {\r\n    console.log('wow')\r\n    console.log(typeof this.props.verifyTokens())\r\n    this.props.verifyTokens().then(valid => {\r\n      console.log(valid);\r\n      if (!valid)\r\n        return;\r\n      fetch(\"/order-information/\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token-access')}`\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.ok)\r\n          return res.json()\r\n        throw new Error(`Something went wrong with error code ${res.status}`)\r\n      })\r\n      .then(\r\n        (result) => {\r\n          const orders = result[\"results\"];\r\n  \r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: orders\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n    });\r\n  }\r\n  \r\n\r\n  render () {\r\n\r\n    const {gotoFuncs} = this.props;\r\n    const {orders, isLoaded} = this.state;\r\n\r\n    const total = orders.length;\r\n    var build_num = 0\r\n    var paint_num = 0\r\n    var delivery_num = 0\r\n    var complete_num = 0\r\n    if (isLoaded){\r\n      for (var i = 0; i < total; i++) { // More efficient than built-in filter functions\r\n        const phase = orders[i][\"status\"]\r\n        if (phase == 2){ // TODO: this works, but could be cleaner . . .\r\n          build_num ++;\r\n        }\r\n        if (phase == 3){\r\n          paint_num ++;\r\n        }\r\n        if (phase == 4){\r\n          delivery_num ++;\r\n        }\r\n        if (phase ==  5){\r\n          complete_num ++;\r\n        }\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify={\"center\"}>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Total Requests\" stat={total} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Ready For Build\" stat={build_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Ready For Paint\" stat={paint_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Out for Delivery\" stat={delivery_num} />\r\n          </Grid>\r\n          <Grid item xs >\r\n            <NumberStat title=\"Completed Ramps\" stat={complete_num} />\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          isLoaded && <ListingBox click={(data) => gotoFuncs.ramp_info(true,data, this.props.verifyTokens)} orders={orders} isAdmin = { this.props.isAdmin} isLoaded={isLoaded}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction NumberStat(props){\r\n  return (\r\n    <div className={\"number-stat block\"}>\r\n    <h2 className={\"block-title\"}>{props.title}</h2>\r\n      <span className={\"number-stat-num\"}>\r\n        {props.stat}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"]},"metadata":{},"sourceType":"module"}